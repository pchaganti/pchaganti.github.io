{
  "last_updated": "2025-10-01T23:24:02.109213-04:00",
  "papers": [
    {
      "title": "OmniRetarget: Interaction-Preserving Data Generation for Humanoid\n  Whole-Body Loco-Manipulation and Scene Interaction",
      "summary": "A dominant paradigm for teaching humanoid robots complex skills is to\nretarget human motions as kinematic references to train reinforcement learning\n(RL) policies. However, existing retargeting pipelines often struggle with the\nsignificant embodiment gap between humans and robots, producing physically\nimplausible artifacts like foot-skating and penetration. More importantly,\ncommon retargeting methods neglect the rich human-object and human-environment\ninteractions essential for expressive locomotion and loco-manipulation. To\naddress this, we introduce OmniRetarget, an interaction-preserving data\ngeneration engine based on an interaction mesh that explicitly models and\npreserves the crucial spatial and contact relationships between an agent, the\nterrain, and manipulated objects. By minimizing the Laplacian deformation\nbetween the human and robot meshes while enforcing kinematic constraints,\nOmniRetarget generates kinematically feasible trajectories. Moreover,\npreserving task-relevant interactions enables efficient data augmentation, from\na single demonstration to different robot embodiments, terrains, and object\nconfigurations. We comprehensively evaluate OmniRetarget by retargeting motions\nfrom OMOMO, LAFAN1, and our in-house MoCap datasets, generating over 8-hour\ntrajectories that achieve better kinematic constraint satisfaction and contact\npreservation than widely used baselines. Such high-quality data enables\nproprioceptive RL policies to successfully execute long-horizon (up to 30\nseconds) parkour and loco-manipulation skills on a Unitree G1 humanoid, trained\nwith only 5 reward terms and simple domain randomization shared by all tasks,\nwithout any learning curriculum.",
      "url": "http://arxiv.org/abs/2509.26633v1",
      "published_time_eastern_timestamp": 1759255142.0
    },
    {
      "title": "Branching Out: Broadening AI Measurement and Evaluation with Measurement\n  Trees",
      "summary": "This paper introduces \\textit{measurement trees}, a novel class of metrics\ndesigned to combine various constructs into an interpretable multi-level\nrepresentation of a measurand. Unlike conventional metrics that yield single\nvalues, vectors, surfaces, or categories, measurement trees produce a\nhierarchical directed graph in which each node summarizes its children through\nuser-defined aggregation methods. In response to recent calls to expand the\nscope of AI system evaluation, measurement trees enhance metric transparency\nand facilitate the integration of heterogeneous evidence, including, e.g.,\nagentic, business, energy-efficiency, sociotechnical, or security signals. We\npresent definitions and examples, demonstrate practical utility through a\nlarge-scale measurement exercise, and provide accompanying open-source Python\ncode. By operationalizing a transparent approach to measurement of complex\nconstructs, this work offers a principled foundation for broader and more\ninterpretable AI evaluation.",
      "url": "http://arxiv.org/abs/2509.26632v1",
      "published_time_eastern_timestamp": 1759255139.0
    },
    {
      "title": "Fine-tuning Behavioral Cloning Policies with Preference-Based\n  Reinforcement Learning",
      "summary": "Deploying reinforcement learning (RL) in robotics, industry, and health care\nis blocked by two obstacles: the difficulty of specifying accurate rewards and\nthe risk of unsafe, data-hungry exploration. We address this by proposing a\ntwo-stage framework that first learns a safe initial policy from a reward-free\ndataset of expert demonstrations, then fine-tunes it online using\npreference-based human feedback. We provide the first principled analysis of\nthis offline-to-online approach and introduce BRIDGE, a unified algorithm that\nintegrates both signals via an uncertainty-weighted objective. We derive regret\nbounds that shrink with the number of offline demonstrations, explicitly\nconnecting the quantity of offline data to online sample efficiency. We\nvalidate BRIDGE in discrete and continuous control MuJoCo environments, showing\nit achieves lower regret than both standalone behavioral cloning and online\npreference-based RL. Our work establishes a theoretical foundation for\ndesigning more sample-efficient interactive agents.",
      "url": "http://arxiv.org/abs/2509.26605v1",
      "published_time_eastern_timestamp": 1759254619.0
    },
    {
      "title": "Towards Reliable Benchmarking: A Contamination Free, Controllable\n  Evaluation Framework for Multi-step LLM Function Calling",
      "summary": "As language models gain access to external tools via structured function\ncalls, they become increasingly more capable of solving complex, multi-step\ntasks. However, existing benchmarks for tool-augmented language models (TaLMs)\nprovide insufficient control over factors such as the number of functions\naccessible, task complexity, and input size, and remain vulnerable to data\ncontamination. We present FuncBenchGen, a unified, contamination-free framework\nthat evaluates TaLMs by generating synthetic multi-step tool-use tasks. The key\nidea is to cast tool use as traversal over a hidden function-dependency DAG\nwhere nodes are function calls and an edge between nodes represents one\nfunction consuming the output of another. Given a set of external function\nschemas, initial variable values, and a target variable, models must compose\nthe correct call sequence to compute the target variable. FuncBenchGen allows\nusers to precisely control task difficulty (e.g., graph size, dependency depth,\nand distractor functions) while avoiding data leakage. We apply our\nFuncBenchGen framework to evaluate seven LLMs on tool use tasks of varying\ndifficulty. Reasoning-optimized models consistently outperform general-purpose\nmodels with GPT-5 significantly outperforming other models. Performance\ndeclines sharply as dependency depth increases. Furthermore, connected\nirrelevant functions prove especially difficult to handle. We find that strong\nmodels often make syntactically valid function calls but propagate incorrect or\nstale argument values across steps, revealing brittle state tracking by LLMs in\nmulti-turn tool use. Motivated by this observation, we introduce a simple\nmitigation strategy that explicitly restates prior variable values to the agent\nat each step. Surprisingly, this lightweight change yields substantial gains\nacross models. e.g., yielding a success rate improvement from 62.5% to 81.3%\nfor GPT-5.",
      "url": "http://arxiv.org/abs/2509.26553v1",
      "published_time_eastern_timestamp": 1759252877.0
    },
    {
      "title": "Towards Verified Code Reasoning by LLMs",
      "summary": "While LLM-based agents are able to tackle a wide variety of code reasoning\nquestions, the answers are not always correct. This prevents the agent from\nbeing useful in situations where high precision is desired: (1) helping a\nsoftware engineer understand a new code base, (2) helping a software engineer\nduring code review sessions, and (3) ensuring that the code generated by an\nautomated code generation system meets certain requirements (e.g. fixes a bug,\nimproves readability, implements a feature).\n  As a result of this lack of trustworthiness, the agent's answers need to be\nmanually verified before they can be trusted. Manually confirming responses\nfrom a code reasoning agent requires human effort and can result in slower\ndeveloper productivity, which weakens the assistance benefits of the agent. In\nthis paper, we describe a method to automatically validate the answers provided\nby a code reasoning agent by verifying its reasoning steps. At a very high\nlevel, the method consists of extracting a formal representation of the agent's\nresponse and, subsequently, using formal verification and program analysis\ntools to verify the agent's reasoning steps.\n  We applied this approach to a benchmark set of 20 uninitialized variable\nerrors detected by sanitizers and 20 program equivalence queries. For the\nuninitialized variable errors, the formal verification step was able to\nvalidate the agent's reasoning on 13/20 examples, and for the program\nequivalence queries, the formal verification step successfully caught 6/8\nincorrect judgments made by the agent.",
      "url": "http://arxiv.org/abs/2509.26546v1",
      "published_time_eastern_timestamp": 1759252671.0
    },
    {
      "title": "Ferret-UI Lite: Lessons from Building Small On-Device GUI Agents",
      "summary": "Developing autonomous agents that effectively interact with Graphic User\nInterfaces (GUIs) remains a challenging open problem, especially for small\non-device models. In this paper, we present Ferret-UI Lite, a compact,\nend-to-end GUI agent that operates across diverse platforms, including mobile,\nweb, and desktop. Utilizing techniques optimized for developing small models,\nwe build our 3B Ferret-UI Lite agent through curating a diverse GUI data\nmixture from real and synthetic sources, strengthening inference-time\nperformance through chain-of-thought reasoning and visual tool-use, and\nreinforcement learning with designed rewards. Ferret-UI Lite achieves\ncompetitive performance with other small-scale GUI agents. In GUI grounding,\nFerret-UI Lite attains scores of $91.6\\%$, $53.3\\%$, and $61.2\\%$ on the\nScreenSpot-V2, ScreenSpot-Pro, and OSWorld-G benchmarks, respectively. For GUI\nnavigation, Ferret-UI Lite achieves success rates of $28.0\\%$ on AndroidWorld\nand $19.8\\%$ on OSWorld. We share our methods and lessons learned from\ndeveloping compact, on-device GUI agents.",
      "url": "http://arxiv.org/abs/2509.26539v1",
      "published_time_eastern_timestamp": 1759252436.0
    },
    {
      "title": "OceanGym: A Benchmark Environment for Underwater Embodied Agents",
      "summary": "We introduce OceanGym, the first comprehensive benchmark for ocean underwater\nembodied agents, designed to advance AI in one of the most demanding real-world\nenvironments. Unlike terrestrial or aerial domains, underwater settings present\nextreme perceptual and decision-making challenges, including low visibility,\ndynamic ocean currents, making effective agent deployment exceptionally\ndifficult. OceanGym encompasses eight realistic task domains and a unified\nagent framework driven by Multi-modal Large Language Models (MLLMs), which\nintegrates perception, memory, and sequential decision-making. Agents are\nrequired to comprehend optical and sonar data, autonomously explore complex\nenvironments, and accomplish long-horizon objectives under these harsh\nconditions. Extensive experiments reveal substantial gaps between\nstate-of-the-art MLLM-driven agents and human experts, highlighting the\npersistent difficulty of perception, planning, and adaptability in ocean\nunderwater environments. By providing a high-fidelity, rigorously designed\nplatform, OceanGym establishes a testbed for developing robust embodied AI and\ntransferring these capabilities to real-world autonomous ocean underwater\nvehicles, marking a decisive step toward intelligent agents capable of\noperating in one of Earth's last unexplored frontiers. The code and data are\navailable at https://github.com/OceanGPT/OceanGym.",
      "url": "http://arxiv.org/abs/2509.26536v1",
      "published_time_eastern_timestamp": 1759252172.0
    },
    {
      "title": "Optimal Matching Strategies in Two-sided Markets: A Mean Field Approach",
      "summary": "This paper develops a mean field game framework for dynamic two-sided\nmatching markets, extending existing matching theory by integrating micro-macro\ndynamics in two-sided environments. Unlike traditional matching models focusing\non static equilibrium or unilateral optimization, our framework simultaneously\ncaptures dynamic interactions and strategic behaviors of both market sides, as\nwell as the equilibrium. We model two types of agents who meet each other via\nPoisson processes and make simultaneous matching decisions to maximize their\nrespective objective functionals, and find the corresponding equilibrium. Our\napproach formulates the equilibrium as a fully coupled Hamilton-Jacobi-Bellman\nand Fokker-Planck system with nonlocal structure coupling two distinct\npopulations. The mathematical analysis addresses significant challenges from\nthe dual-layered coupling structure and nonlocal structure. We also provide\ninsights into individual behaviors shaping aggregate patterns in labor markets\nthrough numerical experiments.",
      "url": "http://arxiv.org/abs/2509.26531v1",
      "published_time_eastern_timestamp": 1759251940.0
    },
    {
      "title": "SCUBA: Salesforce Computer Use Benchmark",
      "summary": "We introduce SCUBA, a benchmark designed to evaluate computer-use agents on\ncustomer relationship management (CRM) workflows within the Salesforce\nplatform. SCUBA contains 300 task instances derived from real user interviews,\nspanning three primary personas, platform administrators, sales\nrepresentatives, and service agents. The tasks test a range of\nenterprise-critical abilities, including Enterprise Software UI navigation,\ndata manipulation, workflow automation, information retrieval, and\ntroubleshooting. To ensure realism, SCUBA operates in Salesforce sandbox\nenvironments with support for parallel execution and fine-grained evaluation\nmetrics to capture milestone progress. We benchmark a diverse set of agents\nunder both zero-shot and demonstration-augmented settings. We observed huge\nperformance gaps in different agent design paradigms and gaps between the\nopen-source model and the closed-source model. In the zero-shot setting,\nopen-source model powered computer-use agents that have strong performance on\nrelated benchmarks like OSWorld only have less than 5\\% success rate on SCUBA,\nwhile methods built on closed-source models can still have up to 39% task\nsuccess rate. In the demonstration-augmented settings, task success rates can\nbe improved to 50\\% while simultaneously reducing time and costs by 13% and\n16%, respectively. These findings highlight both the challenges of enterprise\ntasks automation and the promise of agentic solutions. By offering a realistic\nbenchmark with interpretable evaluation, SCUBA aims to accelerate progress in\nbuilding reliable computer-use agents for complex business software ecosystems.",
      "url": "http://arxiv.org/abs/2509.26506v1",
      "published_time_eastern_timestamp": 1759250929.0
    },
    {
      "title": "An Agent-Based Simulation of Ageing Societies: Accessibility and Care\n  Dynamics in Remote Areas",
      "summary": "This paper presents an agent-based simulation of accessibility and care\ndynamics in ageing societies, applied to the Italian inner area of Premeno\n(VB). The model integrates census and municipal data, drone-derived elevation\nmodels, GIS road networks, and survey-based caregiving information to generate\nsynthetic populations of older adults and their caregivers. Agents are\norganized into dyads with socio-economic and mobility attributes, enabling the\nsimulation of both micro-scale accessibility and meso-scale caregiving\noutcomes. Two scenarios are compared: a baseline and an alternative involving\nthe relocation of healthcare services. Key indicators include caregiver effort,\noverwhelmed caregivers, walkability, and unmet hours of care. Findings show\nthat while relocation improves walkability locally, it increases unmet care\nhours due to detours and reduced proximity. Household income emerges as the\nprimary driver of caregiver burden, with accessibility shaped by interactions\nbetween financial and mobility resources. Results highlight the need for\ninterventions tailored to context-specific constraints in remote ageing\ncommunities.",
      "url": "http://arxiv.org/abs/2509.26496v1",
      "published_time_eastern_timestamp": 1759250434.0
    }
  ]
}