{
  "last_updated": "2025-07-23T21:03:13.848767-04:00",
  "papers": [
    {
      "title": "ThinkAct: Vision-Language-Action Reasoning via Reinforced Visual Latent\n  Planning",
      "summary": "Vision-language-action (VLA) reasoning tasks require agents to interpret\nmultimodal instructions, perform long-horizon planning, and act adaptively in\ndynamic environments. Existing approaches typically train VLA models in an\nend-to-end fashion, directly mapping inputs to actions without explicit\nreasoning, which hinders their ability to plan over multiple steps or adapt to\ncomplex task variations. In this paper, we propose ThinkAct, a dual-system\nframework that bridges high-level reasoning with low-level action execution via\nreinforced visual latent planning. ThinkAct trains a multimodal LLM to generate\nembodied reasoning plans guided by reinforcing action-aligned visual rewards\nbased on goal completion and trajectory consistency. These reasoning plans are\ncompressed into a visual plan latent that conditions a downstream action model\nfor robust action execution on target environments. Extensive experiments on\nembodied reasoning and robot manipulation benchmarks demonstrate that ThinkAct\nenables few-shot adaptation, long-horizon planning, and self-correction\nbehaviors in complex embodied AI tasks.",
      "url": "http://arxiv.org/abs/2507.16815v1",
      "published_time_eastern_timestamp": 1753207186.0
    },
    {
      "title": "LingBench++: A Linguistically-Informed Benchmark and Reasoning Framework\n  for Multi-Step and Cross-Cultural Inference with LLMs",
      "summary": "We propose LingBench++, a linguistically-informed benchmark and reasoning\nframework designed to evaluate large language models (LLMs) on complex\nlinguistic tasks inspired by the International Linguistics Olympiad (IOL).\nUnlike prior benchmarks that focus solely on final answer accuracy, LingBench++\nprovides structured reasoning traces, stepwise evaluation protocols, and rich\ntypological metadata across over 90 low-resource and cross-cultural languages.\nWe further develop a multi-agent architecture integrating grammatical knowledge\nretrieval, tool-augmented reasoning, and deliberate hypothesis testing. Through\nsystematic comparisons of baseline and our proposed agentic models, we\ndemonstrate that models equipped with external knowledge sources and iterative\nreasoning outperform single-pass approaches in both accuracy and\ninterpretability. LingBench++ offers a comprehensive foundation for advancing\nlinguistically grounded, culturally informed, and cognitively plausible\nreasoning in LLMs.",
      "url": "http://arxiv.org/abs/2507.16809v1",
      "published_time_eastern_timestamp": 1753207064.0
    },
    {
      "title": "Rethinking LLM-Based RTL Code Optimization Via Timing Logic\n  Metamorphosis",
      "summary": "Register Transfer Level(RTL) code optimization is crucial for achieving high\nperformance and low power consumption in digital circuit design. However,\ntraditional optimization methods often rely on manual tuning and heuristics,\nwhich can be time-consuming and error-prone. Recent studies proposed to\nleverage Large Language Models(LLMs) to assist in RTL code optimization. LLMs\ncan generate optimized code snippets based on natural language descriptions,\npotentially speeding up the optimization process. However, existing approaches\nhave not thoroughly evaluated the effectiveness of LLM-Based code optimization\nmethods for RTL code with complex timing logic. To address this gap, we\nconducted a comprehensive empirical investigation to assess the capability of\nLLM-Based RTL code optimization methods in handling RTL code with complex\ntiming logic. In this study, we first propose a new benchmark for RTL\noptimization evaluation. It comprises four subsets, each corresponding to a\nspecific area of RTL code optimization. Then we introduce a method based on\nmetamorphosis to systematically evaluate the effectiveness of LLM-Based RTL\ncode optimization methods.Our key insight is that the optimization\neffectiveness should remain consistent for semantically equivalent but more\ncomplex code. After intensive experiments, we revealed several key findings.\n(1) LLM-Based RTL optimization methods can effectively optimize logic\noperations and outperform existing compiler-based methods. (2) LLM-Based RTL\noptimization methods do not perform better than existing compiler-based methods\non RTL code with complex timing logic, particularly in timing control flow\noptimization and clock domain optimization. This is primarily attributed to the\nchallenges LLMs face in understanding timing logic in RTL code. Based on these\nfindings, we provide insights for further research in leveraging LLMs for RTL\ncode optimization.",
      "url": "http://arxiv.org/abs/2507.16808v1",
      "published_time_eastern_timestamp": 1753207022.0
    },
    {
      "title": "Agentar-Fin-R1: Enhancing Financial Intelligence through Domain\n  Expertise, Training Efficiency, and Advanced Reasoning",
      "summary": "Large Language Models (LLMs) exhibit considerable promise in financial\napplications; however, prevailing models frequently demonstrate limitations\nwhen confronted with scenarios that necessitate sophisticated reasoning\ncapabilities, stringent trustworthiness criteria, and efficient adaptation to\ndomain-specific requirements. We introduce the Agentar-Fin-R1 series of\nfinancial large language models (8B and 32B parameters), specifically\nengineered based on the Qwen3 foundation model to enhance reasoning\ncapabilities, reliability, and domain specialization for financial\napplications. Our optimization approach integrates a high-quality, systematic\nfinancial task label system with a comprehensive multi-layered trustworthiness\nassurance framework. This framework encompasses high-quality trustworthy\nknowledge engineering, multi-agent trustworthy data synthesis, and rigorous\ndata validation governance. Through label-guided automated difficulty-aware\noptimization, tow-stage training pipeline, and dynamic attribution systems, we\nachieve substantial improvements in training efficiency. Our models undergo\ncomprehensive evaluation on mainstream financial benchmarks including Fineva,\nFinEval, and FinanceIQ, as well as general reasoning datasets such as MATH-500\nand GPQA-diamond. To thoroughly assess real-world deployment capabilities, we\ninnovatively propose the Finova evaluation benchmark, which focuses on\nagent-level financial reasoning and compliance verification. Experimental\nresults demonstrate that Agentar-Fin-R1 not only achieves state-of-the-art\nperformance on financial tasks but also exhibits exceptional general reasoning\ncapabilities, validating its effectiveness as a trustworthy solution for\nhigh-stakes financial applications. The Finova bench is available at\nhttps://github.com/antgroup/Finova.",
      "url": "http://arxiv.org/abs/2507.16802v2",
      "published_time_eastern_timestamp": 1753206736.0
    },
    {
      "title": "Test-Time-Matching: Decouple Personality, Memory, and Linguistic Style\n  in LLM-based Role-Playing Language Agent",
      "summary": "The rapid advancement of large language models (LLMs) has enabled\nrole-playing language agents to demonstrate significant potential in various\napplications. However, relying solely on prompts and contextual inputs often\nproves insufficient for achieving deep immersion in specific roles,\nparticularly well-known fictional or public figures. On the other hand,\nfine-tuning-based approaches face limitations due to the challenges associated\nwith data collection and the computational resources required for training,\nthereby restricting their broader applicability. To address these issues, we\npropose Test-Time-Matching (TTM), a training-free role-playing framework\nthrough test-time scaling and context engineering. TTM uses LLM agents to\nautomatically decouple a character's features into personality, memory, and\nlinguistic style. Our framework involves a structured, three-stage generation\npipeline that utilizes these features for controlled role-playing. It achieves\nhigh-fidelity role-playing performance, also enables seamless combinations\nacross diverse linguistic styles and even variations in personality and memory.\nWe evaluate our framework through human assessment, and the results demonstrate\nthat our method achieves the outstanding performance in generating expressive\nand stylistically consistent character dialogues.",
      "url": "http://arxiv.org/abs/2507.16799v2",
      "published_time_eastern_timestamp": 1753206464.0
    },
    {
      "title": "Steering Out-of-Distribution Generalization with Concept Ablation\n  Fine-Tuning",
      "summary": "Fine-tuning large language models (LLMs) can lead to unintended\nout-of-distribution generalization. Standard approaches to this problem rely on\nmodifying training data, for example by adding data that better specify the\nintended generalization. However, this is not always practical. We introduce\nConcept Ablation Fine-Tuning (CAFT), a technique that leverages\ninterpretability tools to control how LLMs generalize from fine-tuning, without\nneeding to modify the training data or otherwise use data from the target\ndistribution. Given a set of directions in an LLM's latent space corresponding\nto undesired concepts, CAFT works by ablating these concepts with linear\nprojections during fine-tuning, steering the model away from unintended\ngeneralizations. We successfully apply CAFT to three fine-tuning tasks,\nincluding emergent misalignment, a phenomenon where LLMs fine-tuned on a narrow\ntask generalize to give egregiously misaligned responses to general questions.\nWithout any changes to the fine-tuning data, CAFT reduces misaligned responses\nby 10x without degrading performance on the training distribution. Overall,\nCAFT represents a novel approach for steering LLM generalization without\nmodifying training data.",
      "url": "http://arxiv.org/abs/2507.16795v1",
      "published_time_eastern_timestamp": 1753206304.0
    },
    {
      "title": "ChatChecker: A Framework for Dialogue System Testing and Evaluation\n  Through Non-cooperative User Simulation",
      "summary": "While modern dialogue systems heavily rely on large language models (LLMs),\ntheir implementation often goes beyond pure LLM interaction. Developers\nintegrate multiple LLMs, external tools, and databases. Therefore, assessment\nof the underlying LLM alone does not suffice, and the dialogue systems must be\ntested and evaluated as a whole. However, this remains a major challenge. With\nmost previous work focusing on turn-level analysis, less attention has been\npaid to integrated dialogue-level quality assurance. To address this, we\npresent ChatChecker, a framework for automated evaluation and testing of\ncomplex dialogue systems. ChatChecker uses LLMs to simulate diverse user\ninteractions, identify dialogue breakdowns, and evaluate quality. Compared to\nprevious approaches, our design reduces setup effort and is generalizable, as\nit does not require reference dialogues and is decoupled from the\nimplementation of the target dialogue system. We improve breakdown detection\nperformance over a prior LLM-based approach by including an error taxonomy in\nthe prompt. Additionally, we propose a novel non-cooperative user simulator\nbased on challenging personas that uncovers weaknesses in target dialogue\nsystems more effectively. Through this, ChatChecker contributes to thorough and\nscalable testing. This enables both researchers and practitioners to accelerate\nthe development of robust dialogue systems.",
      "url": "http://arxiv.org/abs/2507.16792v1",
      "published_time_eastern_timestamp": 1753206034.0
    },
    {
      "title": "Beyond Context Limits: Subconscious Threads for Long-Horizon Reasoning",
      "summary": "To break the context limits of large language models (LLMs) that bottleneck\nreasoning accuracy and efficiency, we propose the Thread Inference Model (TIM),\na family of LLMs trained for recursive and decompositional problem solving, and\nTIMRUN, an inference runtime enabling long-horizon structured reasoning beyond\ncontext limits. Together, TIM hosted on TIMRUN supports virtually unlimited\nworking memory and multi-hop tool calls within a single language model\ninference, overcoming output limits, positional-embedding constraints, and\nGPU-memory bottlenecks. Performance is achieved by modeling natural language as\nreasoning trees measured by both length and depth instead of linear sequences.\nThe reasoning trees consist of tasks with thoughts, recursive subtasks, and\nconclusions based on the concept we proposed in Schroeder et al, 2025. During\ngeneration, we maintain a working memory that retains only the key-value states\nof the most relevant context tokens, selected by a rule-based subtask-pruning\nmechanism, enabling reuse of positional embeddings and GPU memory pages\nthroughout reasoning. Experimental results show that our system sustains high\ninference throughput, even when manipulating up to 90% of the KV cache in GPU\nmemory. It also delivers accurate reasoning on mathematical tasks and handles\ninformation retrieval challenges that require long-horizon reasoning and\nmulti-hop tool use.",
      "url": "http://arxiv.org/abs/2507.16784v1",
      "published_time_eastern_timestamp": 1753205404.0
    },
    {
      "title": "Cooling Matters: Benchmarking Large Language Models and Vision-Language\n  Models on Liquid-Cooled Versus Air-Cooled H100 GPU Systems",
      "summary": "The unprecedented growth in artificial intelligence (AI) workloads, recently\ndominated by large language models (LLMs) and vision-language models (VLMs),\nhas intensified power and cooling demands in data centers. This study\nbenchmarks LLMs and VLMs on two HGX nodes, each with 8x NVIDIA H100 graphics\nprocessing units (GPUs), using liquid and air cooling. Leveraging GPU Burn,\nWeights and Biases, and IPMItool, we collect detailed thermal, power, and\ncomputation data. Results show that the liquid-cooled systems maintain GPU\ntemperatures between 41-50 degrees Celsius, while the air-cooled counterparts\nfluctuate between 54-72 degrees Celsius under load. This thermal stability of\nliquid-cooled systems yields 17 percent higher performance (54 TFLOPs per GPU\nvs. 46 TFLOPs per GPU), improved performance per watt, reduced energy overhead,\nand greater system efficiency than the air-cooled counterparts. These findings\nunderscore the energy and sustainability benefits of liquid cooling, offering a\ncompelling path forward for hyperscale data centers s",
      "url": "http://arxiv.org/abs/2507.16781v1",
      "published_time_eastern_timestamp": 1753205284.0
    },
    {
      "title": "When LLMs Copy to Think: Uncovering Copy-Guided Attacks in Reasoning\n  LLMs",
      "summary": "Large Language Models (LLMs) have become integral to automated code analysis,\nenabling tasks such as vulnerability detection and code comprehension. However,\ntheir integration introduces novel attack surfaces. In this paper, we identify\nand investigate a new class of prompt-based attacks, termed Copy-Guided Attacks\n(CGA), which exploit the inherent copying tendencies of reasoning-capable LLMs.\nBy injecting carefully crafted triggers into external code snippets,\nadversaries can induce the model to replicate malicious content during\ninference. This behavior enables two classes of vulnerabilities: inference\nlength manipulation, where the model generates abnormally short or excessively\nlong reasoning traces; and inference result manipulation, where the model\nproduces misleading or incorrect conclusions. We formalize CGA as an\noptimization problem and propose a gradient-based approach to synthesize\neffective triggers. Empirical evaluation on state-of-the-art reasoning LLMs\nshows that CGA reliably induces infinite loops, premature termination, false\nrefusals, and semantic distortions in code analysis tasks. While highly\neffective in targeted settings, we observe challenges in generalizing CGA\nacross diverse prompts due to computational constraints, posing an open\nquestion for future research. Our findings expose a critical yet underexplored\nvulnerability in LLM-powered development pipelines and call for urgent advances\nin prompt-level defense mechanisms.",
      "url": "http://arxiv.org/abs/2507.16773v1",
      "published_time_eastern_timestamp": 1753204896.0
    },
    {
      "title": "WGRAMMAR: Leverage Prior Knowledge to Accelerate Structured Decoding",
      "summary": "Structured decoding enables large language models (LLMs) to generate outputs\nin formats required by downstream systems, such as HTML or JSON. However,\nexisting methods suffer from efficiency bottlenecks due to grammar compilation,\nstate tracking, and mask creation. We observe that many real-world tasks embed\nstrong prior knowledge about output structure. Leveraging this, we propose a\ndecomposition of constraints into static and dynamic components -- precompiling\nstatic structures offline and instantiating dynamic arguments at runtime using\ngrammar snippets. Instead of relying on pushdown automata, we employ a\ncompositional set of operators to model regular formats, achieving lower\ntransition latency. We introduce wgrammar, a lightweight decoding engine that\nintegrates domain-aware simplification, constraint decomposition, and mask\ncaching, achieving up to 250x speedup over existing systems. wgrammar's source\ncode is publicly available at https://github.com/wrran/wgrammar.",
      "url": "http://arxiv.org/abs/2507.16768v1",
      "published_time_eastern_timestamp": 1753204427.0
    },
    {
      "title": "Never Come Up Empty: Adaptive HyDE Retrieval for Improving LLM Developer\n  Support",
      "summary": "Large Language Models (LLMs) have shown promise in assisting developers with\ncode-related questions; however, LLMs carry the risk of generating unreliable\nanswers. To address this, Retrieval-Augmented Generation (RAG) has been\nproposed to reduce the unreliability (i.e., hallucinations) of LLMs. However,\ndesigning effective pipelines remains challenging due to numerous design\nchoices. In this paper, we construct a retrieval corpus of over 3 million Java\nand Python related Stack Overflow posts with accepted answers, and explore\nvarious RAG pipeline designs to answer developer questions, evaluating their\neffectiveness in generating accurate and reliable responses. More specifically,\nwe (1) design and evaluate 7 different RAG pipelines and 63 pipeline variants\nto answer questions that have historically similar matches, and (2) address new\nquestions without any close prior matches by automatically lowering the\nsimilarity threshold during retrieval, thereby increasing the chance of finding\npartially relevant context and improving coverage for unseen cases. We find\nthat implementing a RAG pipeline combining hypothetical-documentation-embedding\n(HyDE) with the full-answer context performs best in retrieving and answering\nsimilarcontent for Stack Overflow questions. Finally, we apply our optimal RAG\npipeline to 4 open-source LLMs and compare the results to their zero-shot\nperformance. Our findings show that RAG with our optimal RAG pipeline\nconsistently outperforms zero-shot baselines across models, achieving higher\nscores for helpfulness, correctness, and detail with LLM-as-a-judge. These\nfindings demonstrate that our optimal RAG pipelines robustly enhance answer\nquality for a wide range of developer queries including both previously seen\nand novel questions across different LLMs",
      "url": "http://arxiv.org/abs/2507.16754v1",
      "published_time_eastern_timestamp": 1753202760.0
    },
    {
      "title": "Collaborative Inference and Learning between Edge SLMs and Cloud LLMs: A\n  Survey of Algorithms, Execution, and Open Challenges",
      "summary": "As large language models (LLMs) evolve, deploying them solely in the cloud or\ncompressing them for edge devices has become inadequate due to concerns about\nlatency, privacy, cost, and personalization. This survey explores a\ncollaborative paradigm in which cloud-based LLMs and edge-deployed small\nlanguage models (SLMs) cooperate across both inference and training. We present\na unified taxonomy of edge-cloud collaboration strategies. For inference, we\ncategorize approaches into task assignment, task division, and mixture-based\ncollaboration at both task and token granularity, encompassing adaptive\nscheduling, resource-aware offloading, speculative decoding, and modular\nrouting. For training, we review distributed adaptation techniques, including\nparameter alignment, pruning, bidirectional distillation, and\nsmall-model-guided optimization. We further summarize datasets, benchmarks, and\ndeployment cases, and highlight privacy-preserving methods and vertical\napplications. This survey provides the first systematic foundation for LLM-SLM\ncollaboration, bridging system and algorithm co-design to enable efficient,\nscalable, and trustworthy edge-cloud intelligence.",
      "url": "http://arxiv.org/abs/2507.16731v1",
      "published_time_eastern_timestamp": 1753200823.0
    },
    {
      "title": "Deliberative Searcher: Improving LLM Reliability via Reinforcement\n  Learning with constraints",
      "summary": "Improving the reliability of large language models (LLMs) is critical for\ndeploying them in real-world scenarios. In this paper, we propose\n\\textbf{Deliberative Searcher}, the first framework to integrate certainty\ncalibration with retrieval-based search for open-domain question answering. The\nagent performs multi-step reflection and verification over Wikipedia data and\nis trained with a reinforcement learning algorithm that optimizes for accuracy\nunder a soft reliability constraint. Empirical results show that proposed\nmethod improves alignment between model confidence and correctness, leading to\nmore trustworthy outputs. This paper will be continuously updated.",
      "url": "http://arxiv.org/abs/2507.16727v2",
      "published_time_eastern_timestamp": 1753200574.0
    },
    {
      "title": "RAVine: Reality-Aligned Evaluation for Agentic Search",
      "summary": "Agentic search, as a more autonomous and adaptive paradigm of retrieval\naugmentation, is driving the evolution of intelligent search systems. However,\nexisting evaluation frameworks fail to align well with the goals of agentic\nsearch. First, the complex queries commonly used in current benchmarks often\ndeviate from realistic user search scenarios. Second, prior approaches tend to\nintroduce noise when extracting ground truth for end-to-end evaluations,\nleading to distorted assessments at a fine-grained level. Third, most current\nframeworks focus solely on the quality of final answers, neglecting the\nevaluation of the iterative process inherent to agentic search. To address\nthese limitations, we propose RAVine -- a Reality-Aligned eValuation framework\nfor agentic LLMs with search. RAVine targets multi-point queries and long-form\nanswers that better reflect user intents, and introduces an attributable ground\ntruth construction strategy to enhance the accuracy of fine-grained evaluation.\nMoreover, RAVine examines model's interaction with search tools throughout the\niterative process, and accounts for factors of efficiency. We benchmark a\nseries of models using RAVine and derive several insights, which we hope will\ncontribute to advancing the development of agentic search systems. The code and\ndatasets are available at https://github.com/SwordFaith/RAVine.",
      "url": "http://arxiv.org/abs/2507.16725v1",
      "published_time_eastern_timestamp": 1753200492.0
    },
    {
      "title": "Enhancing Remote Sensing Vision-Language Models Through MLLM and\n  LLM-Based High-Quality Image-Text Dataset Generation",
      "summary": "The application of Vision-language foundation models (VLFMs) to remote\nsensing (RS) imagery has garnered significant attention due to their superior\ncapability in various downstream tasks. A key challenge lies in the scarcity of\nhigh-quality, large-scale, image-text paired training data. Recently, several\nworks introduced extensive image-text datasets for RS and trained their VLFMs.\nHowever, due to the rudimentary methods used for generating captions, the\nquality of datasets is suboptimal, requiring larger volumes of training data,\nwhile only yielding modest performance improvements. In this paper, we propose\na two-stage method named MpGI(Multi-Perspective Generation and Integration) for\ngenerating high-quality text captions for RS images. Firstly, we generate\ndistinct and detailed descriptions from different perspectives using\nRule-MLLM(Multimodal Large Language Model) Relay Generation and MLLMs\ngeneration methods. Next, we utilize Large Language Models (LLMs) to integrate\nthese diverse descriptions into comprehensive captions, capturing details from\nmultiple perspectives. Finally, we have created the HQRS-IT-210K dataset,\nincluding about 210,000 RS images and 1.3 million captions. We fine-tuned two\nVLFMs using our dataset: CLIP, a discriminative model, and CoCa, an\nimage-to-text generative model. This process resulted in our proposed HQRS-CLIP\nand RS-CoCa models. Experimental results demonstrate that HQRS-CLIP surpassed\nthe previous SOTA RS CLIP model in various downstream tasks while using only\n4.2\\% of the training data. RS-CoCa outperforms other advanced approaches\nacross benchmark datasets and can generate captions for RS images that rival or\neven exceed manual annotations. Dataset, pre-trained models, and codes will be\nreleased at https://github.com/YiguoHe/HQRS-210K-and-HQRS-CLIP.",
      "url": "http://arxiv.org/abs/2507.16716v1",
      "published_time_eastern_timestamp": 1753199693.0
    },
    {
      "title": "Advancing Risk and Quality Assurance: A RAG Chatbot for Improved\n  Regulatory Compliance",
      "summary": "Risk and Quality (R&Q) assurance in highly regulated industries requires\nconstant navigation of complex regulatory frameworks, with employees handling\nnumerous daily queries demanding accurate policy interpretation. Traditional\nmethods relying on specialized experts create operational bottlenecks and limit\nscalability. We present a novel Retrieval Augmented Generation (RAG) system\nleveraging Large Language Models (LLMs), hybrid search and relevance boosting\nto enhance R&Q query processing. Evaluated on 124 expert-annotated real-world\nqueries, our actively deployed system demonstrates substantial improvements\nover traditional RAG approaches. Additionally, we perform an extensive\nhyperparameter analysis to compare and evaluate multiple configuration setups,\ndelivering valuable insights to practitioners.",
      "url": "http://arxiv.org/abs/2507.16711v1",
      "published_time_eastern_timestamp": 1753199204.0
    },
    {
      "title": "Biases in LLM-Generated Musical Taste Profiles for Recommendation",
      "summary": "One particularly promising use case of Large Language Models (LLMs) for\nrecommendation is the automatic generation of Natural Language (NL) user taste\nprofiles from consumption data. These profiles offer interpretable and editable\nalternatives to opaque collaborative filtering representations, enabling\ngreater transparency and user control. However, it remains unclear whether\nusers consider these profiles to be an accurate representation of their taste,\nwhich is crucial for trust and usability. Moreover, because LLMs inherit\nsocietal and data-driven biases, profile quality may systematically vary across\nuser and item characteristics. In this paper, we study this issue in the\ncontext of music streaming, where personalization is challenged by a large and\nculturally diverse catalog. We conduct a user study in which participants rate\nNL profiles generated from their own listening histories. We analyze whether\nidentification with the profiles is biased by user attributes (e.g.,\nmainstreamness, taste diversity) and item features (e.g., genre, country of\norigin). We also compare these patterns to those observed when using the\nprofiles in a downstream recommendation task. Our findings highlight both the\npotential and limitations of scrutable, LLM-based profiling in personalized\nsystems.",
      "url": "http://arxiv.org/abs/2507.16708v1",
      "published_time_eastern_timestamp": 1753199050.0
    },
    {
      "title": "Generating Search Explanations using Large Language Models",
      "summary": "Aspect-oriented explanations in search results are typically concise text\nsnippets placed alongside retrieved documents to serve as explanations that\nassist users in efficiently locating relevant information. While Large Language\nModels (LLMs) have demonstrated exceptional performance for a range of\nproblems, their potential to generate explanations for search results has not\nbeen explored. This study addresses that gap by leveraging both encoder-decoder\nand decoder-only LLMs to generate explanations for search results. The\nexplanations generated are consistently more accurate and plausible\nexplanations than those produced by a range of baseline models.",
      "url": "http://arxiv.org/abs/2507.16692v1",
      "published_time_eastern_timestamp": 1753198179.0
    },
    {
      "title": "PICACO: Pluralistic In-Context Value Alignment of LLMs via Total\n  Correlation Optimization",
      "summary": "In-Context Learning has shown great potential for aligning Large Language\nModels (LLMs) with human values, helping reduce harmful outputs and accommodate\ndiverse preferences without costly post-training, known as In-Context Alignment\n(ICA). However, LLMs' comprehension of input prompts remains agnostic, limiting\nICA's ability to address value tensions--human values are inherently\npluralistic, often imposing conflicting demands, e.g., stimulation vs.\ntradition. Current ICA methods therefore face the Instruction Bottleneck\nchallenge, where LLMs struggle to reconcile multiple intended values within a\nsingle prompt, leading to incomplete or biased alignment. To address this, we\npropose PICACO, a novel pluralistic ICA method. Without fine-tuning, PICACO\noptimizes a meta-instruction that navigates multiple values to better elicit\nLLMs' understanding of them and improve their alignment. This is achieved by\nmaximizing the total correlation between specified values and LLM responses,\ntheoretically reinforcing value correlation while reducing distractive noise,\nresulting in effective value instructions. Extensive experiments on five value\nsets show that PICACO works well with both black-box and open-source LLMs,\noutperforms several recent strong baselines, and achieves a better balance\nacross up to 8 distinct values.",
      "url": "http://arxiv.org/abs/2507.16679v1",
      "published_time_eastern_timestamp": 1753197296.0
    }
  ]
}