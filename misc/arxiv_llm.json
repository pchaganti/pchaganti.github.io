{
  "last_updated": "2025-09-25T02:17:53.776229-04:00",
  "papers": [
    {
      "title": "Uncovering Graph Reasoning in Decoder-only Transformers with Circuit\n  Tracing",
      "summary": "Transformer-based LLMs demonstrate strong performance on graph reasoning\ntasks, yet their internal mechanisms remain underexplored. To uncover these\nreasoning process mechanisms in a fundamental and unified view, we set the\nbasic decoder-only transformers and explain them using the circuit-tracer\nframework. Through this lens, we visualize reasoning traces and identify two\ncore mechanisms in graph reasoning: token merging and structural memorization,\nwhich underlie both path reasoning and substructure extraction tasks. We\nfurther quantify these behaviors and analyze how they are influenced by graph\ndensity and model size. Our study provides a unified interpretability framework\nfor understanding structural reasoning in decoder-only Transformers.",
      "url": "http://arxiv.org/abs/2509.20336v1",
      "published_time_eastern_timestamp": 1758734705.0
    },
    {
      "title": "Video models are zero-shot learners and reasoners",
      "summary": "The remarkable zero-shot capabilities of Large Language Models (LLMs) have\npropelled natural language processing from task-specific models to unified,\ngeneralist foundation models. This transformation emerged from simple\nprimitives: large, generative models trained on web-scale data. Curiously, the\nsame primitives apply to today's generative video models. Could video models be\non a trajectory towards general-purpose vision understanding, much like LLMs\ndeveloped general-purpose language understanding? We demonstrate that Veo 3 can\nsolve a broad variety of tasks it wasn't explicitly trained for: segmenting\nobjects, detecting edges, editing images, understanding physical properties,\nrecognizing object affordances, simulating tool use, and more. These abilities\nto perceive, model, and manipulate the visual world enable early forms of\nvisual reasoning like maze and symmetry solving. Veo's emergent zero-shot\ncapabilities indicate that video models are on a path to becoming unified,\ngeneralist vision foundation models.",
      "url": "http://arxiv.org/abs/2509.20328v1",
      "published_time_eastern_timestamp": 1758734247.0
    },
    {
      "title": "RAG Security and Privacy: Formalizing the Threat Model and Attack\n  Surface",
      "summary": "Retrieval-Augmented Generation (RAG) is an emerging approach in natural\nlanguage processing that combines large language models (LLMs) with external\ndocument retrieval to produce more accurate and grounded responses. While RAG\nhas shown strong potential in reducing hallucinations and improving factual\nconsistency, it also introduces new privacy and security challenges that differ\nfrom those faced by traditional LLMs. Existing research has demonstrated that\nLLMs can leak sensitive information through training data memorization or\nadversarial prompts, and RAG systems inherit many of these vulnerabilities. At\nthe same time, reliance of RAG on an external knowledge base opens new attack\nsurfaces, including the potential for leaking information about the presence or\ncontent of retrieved documents, or for injecting malicious content to\nmanipulate model behavior. Despite these risks, there is currently no formal\nframework that defines the threat landscape for RAG systems. In this paper, we\naddress a critical gap in the literature by proposing, to the best of our\nknowledge, the first formal threat model for retrieval-RAG systems. We\nintroduce a structured taxonomy of adversary types based on their access to\nmodel components and data, and we formally define key threat vectors such as\ndocument-level membership inference and data poisoning, which pose serious\nprivacy and integrity risks in real-world deployments. By establishing formal\ndefinitions and attack models, our work lays the foundation for a more rigorous\nand principled understanding of privacy and security in RAG systems.",
      "url": "http://arxiv.org/abs/2509.20324v1",
      "published_time_eastern_timestamp": 1758733895.0
    },
    {
      "title": "DRES: Benchmarking LLMs for Disfluency Removal",
      "summary": "Disfluencies -- such as \"um,\" \"uh,\" interjections, parentheticals, and edited\nstatements -- remain a persistent challenge for speech-driven systems,\ndegrading accuracy in command interpretation, summarization, and conversational\nagents. We introduce DRES (Disfluency Removal Evaluation Suite), a controlled\ntext-level benchmark that establishes a reproducible semantic upper bound for\nthis task. DRES builds on human-annotated Switchboard transcripts, isolating\ndisfluency removal from ASR errors and acoustic variability. We systematically\nevaluate proprietary and open-source LLMs across scales, prompting strategies,\nand architectures. Our results reveal that (i) simple segmentation consistently\nimproves performance, even for long-context models; (ii) reasoning-oriented\nmodels tend to over-delete fluent tokens; and (iii) fine-tuning achieves near\nstate-of-the-art precision and recall but harms generalization abilities. We\nfurther present a set of LLM-specific error modes and offer nine practical\nrecommendations (R1-R9) for deploying disfluency removal in speech-driven\npipelines. DRES provides a reproducible, model-agnostic foundation for\nadvancing robust spoken-language systems.",
      "url": "http://arxiv.org/abs/2509.20321v1",
      "published_time_eastern_timestamp": 1758733692.0
    },
    {
      "title": "Z-Scores: A Metric for Linguistically Assessing Disfluency Removal",
      "summary": "Evaluating disfluency removal in speech requires more than aggregate\ntoken-level scores. Traditional word-based metrics such as precision, recall,\nand F1 (E-Scores) capture overall performance but cannot reveal why models\nsucceed or fail. We introduce Z-Scores, a span-level linguistically-grounded\nevaluation metric that categorizes system behavior across distinct disfluency\ntypes (EDITED, INTJ, PRN). Our deterministic alignment module enables robust\nmapping between generated text and disfluent transcripts, allowing Z-Scores to\nexpose systematic weaknesses that word-level metrics obscure. By providing\ncategory-specific diagnostics, Z-Scores enable researchers to identify model\nfailure modes and design targeted interventions -- such as tailored prompts or\ndata augmentation -- yielding measurable performance improvements. A case study\nwith LLMs shows that Z-Scores uncover challenges with INTJ and PRN disfluencies\nhidden in aggregate F1, directly informing model refinement strategies.",
      "url": "http://arxiv.org/abs/2509.20319v1",
      "published_time_eastern_timestamp": 1758733359.0
    },
    {
      "title": "SIM-CoT: Supervised Implicit Chain-of-Thought",
      "summary": "Implicit Chain-of-Thought (CoT) methods present a promising, token-efficient\nalternative to explicit CoT reasoning in Large Language Models (LLMs), but a\npersistent performance gap has limited the application of implicit CoT. We\nidentify a core latent instability issue by scaling the computational budget of\nimplicit CoT approaches: as we increase the number of implicit reasoning tokens\nto enhance performance, the training process often becomes unstable and\ncollapses. Our analysis reveals that this instability arises from the latent\nrepresentations becoming homogeneous and losing their semantic diversity, a\nfailure caused by insufficient step-level supervision in existing implicit CoT\napproaches. To address this issue, we propose SIM-CoT, a plug-and-play training\nmodule that introduces step-level supervision to stabilize and enrich the\nlatent reasoning space. Specifically, SIM-CoT employs an auxiliary decoder\nduring training to align each implicit token with its corresponding explicit\nreasoning step, ensuring that latent states capture distinct and meaningful\ninformation. The proposed auxiliary decoder is removed during inference,\npreserving the computational efficiency of implicit CoT methods with no added\noverhead. In addition, the auxiliary decoder affords interpretability of\nimplicit reasoning by projecting each latent token onto an explicit reasoning\nvocabulary, enabling per-step visualization of semantic roles and diagnosis.\nSIM-CoT significantly enhances both the in-domain accuracy and out-of-domain\nstability of various implicit CoT methods, boosting baselines like Coconut by\n+8.2% on GPT-2 and CODI by +3.0% on LLaMA-3.1 8B. Demonstrating strong\nscalability, SIM-CoT also surpasses the explicit CoT baseline on GPT-2 by 2.1%\nwith 2.3\\times greater token efficiency, while substantially closing the\nperformance gap on larger models like LLaMA-3.1 8B.",
      "url": "http://arxiv.org/abs/2509.20317v1",
      "published_time_eastern_timestamp": 1758733292.0
    },
    {
      "title": "When Judgment Becomes Noise: How Design Failures in LLM Judge Benchmarks\n  Silently Undermine Validity",
      "summary": "LLM-judged benchmarks are increasingly used to evaluate complex model\nbehaviors, yet their design introduces failure modes absent in conventional\nground-truth based benchmarks. We argue that without tight objectives and\nverifiable constructions, benchmark rankings can produce high-confidence\nrankings that are in fact largely noise. We introduce two mechanisms to\ndiagnose these issues. Schematic adherence quantifies how much of a judge's\noverall verdict is explained by the explicit evaluation schema, revealing\nunexplained variance when judges deviate from their own rubric. Psychometric\nvalidity aggregates internal consistency and discriminant validity signals to\nquantify irreducible uncertainty in any benchmarking run. Applying these tools\nto Arena-Hard Auto, we find severe schema incoherence and factor collapse\nacross popular judges: for example, unexplained variance exceeding 90 percent\nfor DeepSeek-R1-32B and factor correlations above 0.93 for most criteria. We\nalso show that the ELO-style aggregation used by Arena-Hard Auto collapses and\nmasks genuine ranking uncertainty. Our results highlight design failures that\nundermine validity and offer actionable principles for building better-scoped,\nreliability-aware LLM-judged benchmarks. We release our code at\nhttps://anonymous.4open.science/r/judgment-to-noise-947D/README.md",
      "url": "http://arxiv.org/abs/2509.20293v1",
      "published_time_eastern_timestamp": 1758731207.0
    },
    {
      "title": "Instruction Boundary: Quantifying Biases in LLM Reasoning under Various\n  Coverage",
      "summary": "Large-language-model (LLM) reasoning has long been regarded as a powerful\ntool for problem solving across domains, providing non-experts with valuable\nadvice. However, their limitations - especially those stemming from prompt\ndesign - remain underexplored. Because users may supply biased or incomplete\nprompts - often unintentionally - LLMs can be misled, undermining reliability\nand creating risks. We refer to this vulnerability as the Instruction Boundary.\nTo investigate the phenomenon, we distill it into eight concrete facets and\nintroduce BiasDetector, a framework that measures biases arising from three\ninstruction types: complete, redundant, and insufficient. We evaluate several\nmainstream LLMs and find that, despite high headline accuracy, substantial\nbiases persist in many downstream tasks as a direct consequence of prompt\ncoverage. Our empirical study confirms that LLM reasoning reliability can still\nbe significantly improved. We analyze the practical impact of these biases and\noutline mitigation strategies. Our findings underscore the need for developers\nto tackle biases and for users to craft options carefully.",
      "url": "http://arxiv.org/abs/2509.20278v1",
      "published_time_eastern_timestamp": 1758730526.0
    },
    {
      "title": "Investigating Security Implications of Automatically Generated Code on\n  the Software Supply Chain",
      "summary": "In recent years, various software supply chain (SSC) attacks have posed\nsignificant risks to the global community. Severe consequences may arise if\ndevelopers integrate insecure code snippets that are vulnerable to SSC attacks\ninto their products. Particularly, code generation techniques, such as large\nlanguage models (LLMs), have been widely utilized in the developer community.\nHowever, LLMs are known to suffer from inherent issues when generating code,\nincluding fabrication, misinformation, and reliance on outdated training data,\nall of which can result in serious software supply chain threats. In this\npaper, we investigate the security threats to the SSC that arise from these\ninherent issues. We examine three categories of threats, including eleven\npotential SSC-related threats, related to external components in source code,\nand continuous integration configuration files. We find some threats in\nLLM-generated code could enable attackers to hijack software and workflows,\nwhile some others might cause potential hidden threats that compromise the\nsecurity of the software over time. To understand these security impacts and\nseverity, we design a tool, SSCGuard, to generate 439,138 prompts based on\nSSC-related questions collected online, and analyze the responses of four\npopular LLMs from GPT and Llama. Our results show that all identified\nSSC-related threats persistently exist. To mitigate these risks, we propose a\nnovel prompt-based defense mechanism, namely Chain-of-Confirmation, to reduce\nfabrication, and a middleware-based defense that informs users of various SSC\nthreats.",
      "url": "http://arxiv.org/abs/2509.20277v1",
      "published_time_eastern_timestamp": 1758730517.0
    },
    {
      "title": "Scan-do Attitude: Towards Autonomous CT Protocol Management using a\n  Large Language Model Agent",
      "summary": "Managing scan protocols in Computed Tomography (CT), which includes adjusting\nacquisition parameters or configuring reconstructions, as well as selecting\npostprocessing tools in a patient-specific manner, is time-consuming and\nrequires clinical as well as technical expertise. At the same time, we observe\nan increasing shortage of skilled workforce in radiology. To address this\nissue, a Large Language Model (LLM)-based agent framework is proposed to assist\nwith the interpretation and execution of protocol configuration requests given\nin natural language or a structured, device-independent format, aiming to\nimprove the workflow efficiency and reduce technologists' workload. The agent\ncombines in-context-learning, instruction-following, and structured toolcalling\nabilities to identify relevant protocol elements and apply accurate\nmodifications. In a systematic evaluation, experimental results indicate that\nthe agent can effectively retrieve protocol components, generate device\ncompatible protocol definition files, and faithfully implement user requests.\nDespite demonstrating feasibility in principle, the approach faces limitations\nregarding syntactic and semantic validity due to lack of a unified device API,\nand challenges with ambiguous or complex requests. In summary, the findings\nshow a clear path towards LLM-based agents for supporting scan protocol\nmanagement in CT imaging.",
      "url": "http://arxiv.org/abs/2509.20270v1",
      "published_time_eastern_timestamp": 1758729851.0
    },
    {
      "title": "Energy Use of AI Inference: Efficiency Pathways and Test-Time Compute",
      "summary": "As AI inference scales to billions of queries and emerging reasoning and\nagentic workflows increase token demand, reliable estimates of per-query energy\nuse are increasingly important for capacity planning, emissions accounting, and\nefficiency prioritization. Many public estimates are inconsistent and overstate\nenergy use, because they extrapolate from limited benchmarks and fail to\nreflect efficiency gains achievable at scale. In this perspective, we introduce\na bottom-up methodology to estimate the per-query energy of large-scale LLM\nsystems based on token throughput. For models running on an H100 node under\nrealistic workloads, GPU utilization and PUE constraints, we estimate a median\nenergy per query of 0.34 Wh (IQR: 0.18-0.67) for frontier-scale models (>200\nbillion parameters). These results are consistent with measurements using\nproduction-scale configurations and show that non-production estimates and\nassumptions can overstate energy use by 4-20x. Extending to test-time scaling\nscenarios with 15x more tokens per typical query, the median energy rises 13x\nto 4.32 Wh, indicating that targeting efficiency in this regime will deliver\nthe largest fleet-wide savings. We quantify achievable efficiency gains at the\nmodel, serving platform, and hardware levels, finding individual median\nreductions of 1.5-3.5x in energy per query, while combined advances can\nplausibly deliver 8-20x reductions. To illustrate the system-level impact, we\nestimate the baseline daily energy use of a deployment serving 1 billion\nqueries to be 0.8 GWh/day. If 10% are long queries, demand could grow to 1.8\nGWh/day. With targeted efficiency interventions, it falls to 0.9 GWh/day,\nsimilar to the energy footprint of web search at that scale. This echoes how\ndata centers historically tempered energy growth through efficiency gains\nduring the internet and cloud build-up.",
      "url": "http://arxiv.org/abs/2509.20241v1",
      "published_time_eastern_timestamp": 1758727921.0
    },
    {
      "title": "Beyond Sharp Minima: Robust LLM Unlearning via Feedback-Guided\n  Multi-Point Optimization",
      "summary": "Current LLM unlearning methods face a critical security vulnerability that\nundermines their fundamental purpose: while they appear to successfully remove\nsensitive or harmful knowledge, this ``forgotten\" information remains\nprecariously recoverable through relearning attacks. We identify that the root\ncause is that conventional methods optimizing the forgetting loss at individual\ndata points will drive model parameters toward sharp minima in the loss\nlandscape. In these unstable regions, even minimal parameter perturbations can\ndrastically alter the model's behaviors. Consequently, relearning attacks\nexploit this vulnerability by using just a few fine-tuning samples to navigate\nthe steep gradients surrounding these unstable regions, thereby rapidly\nrecovering knowledge that was supposedly erased. This exposes a critical\nrobustness gap between apparent unlearning and actual knowledge removal. To\naddress this issue, we propose StableUN, a bi-level feedback-guided\noptimization framework that explicitly seeks more stable parameter regions via\nneighborhood-aware optimization. It integrates forgetting feedback, which uses\nadversarial perturbations to probe parameter neighborhoods, with remembering\nfeedback to preserve model utility, aligning the two objectives through\ngradient projection. Experiments on WMDP and MUSE benchmarks demonstrate that\nour method is significantly more robust against both relearning and\njailbreaking attacks while maintaining competitive utility performance.",
      "url": "http://arxiv.org/abs/2509.20230v1",
      "published_time_eastern_timestamp": 1758727426.0
    },
    {
      "title": "The Cream Rises to the Top: Efficient Reranking Method for Verilog Code\n  Generation",
      "summary": "LLMs face significant challenges in Verilog generation due to limited\ndomain-specific knowledge. While sampling techniques improve pass@k metrics,\nhardware engineers need one trustworthy solution rather than uncertain\ncandidates. To bridge this gap, we formulate it as a semantic alignment problem\nbetween requirements and Verilog implementations, and propose VCD-RNK, a\ndiscriminator model tailored for efficient Verilog code reranking.\nSpecifically, VCD-RNKincorporates Verilog-specific reasoning by distilling\nexpert knowledge across three dimensions: code semantic analysis, test case\ngeneration, and functional correctness assessment. By explicitly simulating the\nabove reasoning processes during inference, VCD-RNK effectively avoids\ncomputationally intensive test execution in existing methods.",
      "url": "http://arxiv.org/abs/2509.20215v1",
      "published_time_eastern_timestamp": 1758726741.0
    },
    {
      "title": "Q-Palette: Fractional-Bit Quantizers Toward Optimal Bit Allocation for\n  Efficient LLM Deployment",
      "summary": "We study weight-only post-training quantization (PTQ), which quantizes the\nweights of a large language model (LLM) without retraining, using little or no\ncalibration data. Weight-only PTQ is crucial for reducing the memory footprint\nand latency of LLM inference, especially in memory-bound, small-batch inference\nscenarios, such as personalized inference on edge devices. Despite its\nimportance, irregular weight distributions with heavy-tailed outliers in LLMs\ncomplicate quantization, recently motivating rotation-based methods that\ntransform weights into near-Gaussian distributions, which are more regular with\nfewer outliers, thereby reducing quantization error. In this work, we first\nderive the information-theoretically optimal bit allocation for Gaussianized\nweights under given bit budgets, revealing that fine-grained fractional-bit\nquantizers approaching the Gaussian distortion-rate bound are essential to\nachieve near-optimal quantization performance. To bridge this theoretical\ninsight and practical implementation, we introduce Q-Palette, a versatile\ncollection of fractional-bit quantizers that range from trellis-coded\nquantizers offering near-optimal distortion to simpler vector and scalar\nquantizers optimized for faster inference, all efficiently implemented with\noptimized CUDA kernels across various bitwidths. Furthermore, leveraging\nQ-Palette as a foundational component, we propose a novel mixed-scheme\nquantization framework, jointly optimizing quantizer choices and layer fusion\ndecisions given resource constraints. The code is available at\nhttps://github.com/snu-mllab/Q-Palette.",
      "url": "http://arxiv.org/abs/2509.20214v1",
      "published_time_eastern_timestamp": 1758726644.0
    },
    {
      "title": "Play by the Type Rules: Inferring Constraints for LLM Functions in\n  Declarative Programs",
      "summary": "Integrating LLM powered operators in declarative query languages allows for\nthe combination of cheap and interpretable functions with powerful,\ngeneralizable language model reasoning. However, in order to benefit from the\noptimized execution of a database query language like SQL, generated outputs\nmust align with the rules enforced by both type checkers and database contents.\nCurrent approaches address this challenge with orchestrations consisting of\nmany LLM-based post-processing calls to ensure alignment between generated\noutputs and database values, introducing performance bottlenecks. We perform a\nstudy on the ability of various sized open-source language models to both parse\nand execute functions within a query language based on SQL, showing that small\nlanguage models can excel as function executors over hybrid data sources. Then,\nwe propose an efficient solution to enforce the well-typedness of LLM\nfunctions, demonstrating 7% accuracy improvement on a multi-hop question\nanswering dataset with 53% improvement in latency over comparable solutions. We\nmake our implementation available at https://github.com/parkervg/blendsql",
      "url": "http://arxiv.org/abs/2509.20208v1",
      "published_time_eastern_timestamp": 1758726153.0
    },
    {
      "title": "STAF: Leveraging LLMs for Automated Attack Tree-Based Security Test\n  Generation",
      "summary": "In modern automotive development, security testing is critical for\nsafeguarding systems against increasingly advanced threats. Attack trees are\nwidely used to systematically represent potential attack vectors, but\ngenerating comprehensive test cases from these trees remains a labor-intensive,\nerror-prone task that has seen limited automation in the context of testing\nvehicular systems. This paper introduces STAF (Security Test Automation\nFramework), a novel approach to automating security test case generation.\nLeveraging Large Language Models (LLMs) and a four-step self-corrective\nRetrieval-Augmented Generation (RAG) framework, STAF automates the generation\nof executable security test cases from attack trees, providing an end-to-end\nsolution that encompasses the entire attack surface. We particularly show the\nelements and processes needed to provide an LLM to actually produce sensible\nand executable automotive security test suites, along with the integration with\nan automated testing framework. We further compare our tailored approach with\ngeneral purpose (vanilla) LLMs and the performance of different LLMs (namely\nGPT-4.1 and DeepSeek) using our approach. We also demonstrate the method of our\noperation step-by-step in a concrete case study. Our results show significant\nimprovements in efficiency, accuracy, scalability, and easy integration in any\nworkflow, marking a substantial advancement in automating automotive security\ntesting methodologies. Using TARAs as an input for verfication tests, we create\nsynergies by connecting two vital elements of a secure automotive development\nprocess.",
      "url": "http://arxiv.org/abs/2509.20190v1",
      "published_time_eastern_timestamp": 1758725202.0
    },
    {
      "title": "Thinking Augmented Pre-training",
      "summary": "This paper introduces a simple and scalable approach to improve the data\nefficiency of large language model (LLM) training by augmenting existing text\ndata with thinking trajectories. The compute for pre-training LLMs has been\ngrowing at an unprecedented rate, while the availability of high-quality data\nremains limited. Consequently, maximizing the utility of available data\nconstitutes a significant research challenge. A primary impediment is that\ncertain high-quality tokens are difficult to learn given a fixed model\ncapacity, as the underlying rationale for a single token can be exceptionally\ncomplex and deep. To address this issue, we propose Thinking augmented\nPre-Training (TPT), a universal methodology that augments text with\nautomatically generated thinking trajectories. Such augmentation effectively\nincreases the volume of the training data and makes high-quality tokens more\nlearnable through step-by-step reasoning and decomposition. We apply TPT across\ndiverse training configurations up to $100$B tokens, encompassing pre-training\nwith both constrained and abundant data, as well as mid-training from strong\nopen-source checkpoints. Experimental results indicate that our method\nsubstantially improves the performance of LLMs across various model sizes and\nfamilies. Notably, TPT enhances the data efficiency of LLM pre-training by a\nfactor of $3$. For a $3$B parameter model, it improves the post-training\nperformance by over $10\\%$ on several challenging reasoning benchmarks.",
      "url": "http://arxiv.org/abs/2509.20186v1",
      "published_time_eastern_timestamp": 1758725113.0
    },
    {
      "title": "Benchmarking Web API Integration Code Generation",
      "summary": "API integration is a cornerstone of our digital infrastructure, enabling\nsoftware systems to connect and interact. However, as shown by many studies,\nwriting or generating correct code to invoke APIs, particularly web APIs, is\nchallenging. Although large language models~(LLMs) have become popular in\nsoftware development, their effectiveness in automating the generation of web\nAPI integration code remains unexplored. In order to address this, we present a\ndataset and evaluation pipeline designed to assess the ability of LLMs to\ngenerate web API invocation code. Our experiments with several open-source LLMs\nreveal that generating API invocations poses a significant challenge, resulting\nin hallucinated endpoints, incorrect argument usage, and other errors. None of\nthe evaluated open-source models were able to solve more than 40% of the tasks.",
      "url": "http://arxiv.org/abs/2509.20172v1",
      "published_time_eastern_timestamp": 1758724604.0
    },
    {
      "title": "Probing Gender Bias in Multilingual LLMs: A Case Study of Stereotypes in\n  Persian",
      "summary": "Multilingual Large Language Models (LLMs) are increasingly used worldwide,\nmaking it essential to ensure they are free from gender bias to prevent\nrepresentational harm. While prior studies have examined such biases in\nhigh-resource languages, low-resource languages remain understudied. In this\npaper, we propose a template-based probing methodology, validated against\nreal-world data, to uncover gender stereotypes in LLMs. As part of this\nframework, we introduce the Domain-Specific Gender Skew Index (DS-GSI), a\nmetric that quantifies deviations from gender parity. We evaluate four\nprominent models, GPT-4o mini, DeepSeek R1, Gemini 2.0 Flash, and Qwen QwQ 32B,\nacross four semantic domains, focusing on Persian, a low-resource language with\ndistinct linguistic features. Our results show that all models exhibit gender\nstereotypes, with greater disparities in Persian than in English across all\ndomains. Among these, sports reflect the most rigid gender biases. This study\nunderscores the need for inclusive NLP practices and provides a framework for\nassessing bias in other low-resource languages.",
      "url": "http://arxiv.org/abs/2509.20168v1",
      "published_time_eastern_timestamp": 1758724457.0
    },
    {
      "title": "CyberSOCEval: Benchmarking LLMs Capabilities for Malware Analysis and\n  Threat Intelligence Reasoning",
      "summary": "Today's cyber defenders are overwhelmed by a deluge of security alerts,\nthreat intelligence signals, and shifting business context, creating an urgent\nneed for AI systems to enhance operational security work. While Large Language\nModels (LLMs) have the potential to automate and scale Security Operations\nCenter (SOC) operations, existing evaluations do not fully assess the scenarios\nmost relevant to real-world defenders. This lack of informed evaluation impacts\nboth AI developers and those applying LLMs to SOC automation. Without clear\ninsight into LLM performance in real-world security scenarios, developers lack\na north star for development, and users cannot reliably select the most\neffective models. Meanwhile, malicious actors are using AI to scale cyber\nattacks, highlighting the need for open source benchmarks to drive adoption and\ncommunity-driven improvement among defenders and model developers. To address\nthis, we introduce CyberSOCEval, a new suite of open source benchmarks within\nCyberSecEval 4. CyberSOCEval includes benchmarks tailored to evaluate LLMs in\ntwo tasks: Malware Analysis and Threat Intelligence Reasoning--core defensive\ndomains with inadequate coverage in current benchmarks. Our evaluations show\nthat larger, more modern LLMs tend to perform better, confirming the training\nscaling laws paradigm. We also find that reasoning models leveraging test time\nscaling do not achieve the same boost as in coding and math, suggesting these\nmodels have not been trained to reason about cybersecurity analysis, and\npointing to a key opportunity for improvement. Finally, current LLMs are far\nfrom saturating our evaluations, showing that CyberSOCEval presents a\nsignificant challenge for AI developers to improve cyber defense capabilities.",
      "url": "http://arxiv.org/abs/2509.20166v1",
      "published_time_eastern_timestamp": 1758724387.0
    }
  ]
}