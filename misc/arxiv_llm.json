{
  "last_updated": "2025-10-06T08:23:23.514464-04:00",
  "papers": [
    {
      "title": "Self-Anchor: Large Language Model Reasoning via Step-by-step Attention\n  Alignment",
      "summary": "To solve complex reasoning tasks for Large Language Models (LLMs),\nprompting-based methods offer a lightweight alternative to fine-tuning and\nreinforcement learning. However, as reasoning chains extend, critical\nintermediate steps and the original prompt will be buried in the context,\nreceiving insufficient attention and leading to errors. In this paper, we\npropose Self-Anchor, a novel pipeline that leverages the inherent structure of\nreasoning to steer LLM attention. Self-Anchor decomposes reasoning trajectories\ninto structured plans and automatically aligns the model's attention to the\nmost relevant inference steps, allowing the model to maintain focus throughout\ngeneration. Our experiment shows that Self-Anchor outperforms SOTA prompting\nmethods across six benchmarks. Notably, Self-Anchor significantly reduces the\nperformance gap between ``non-reasoning'' models and specialized reasoning\nmodels, with the potential to enable most LLMs to tackle complex reasoning\ntasks without retraining.",
      "url": "http://arxiv.org/abs/2510.03223v1",
      "published_time_eastern_timestamp": 1759514193.0
    },
    {
      "title": "Abstain and Validate: A Dual-LLM Policy for Reducing Noise in Agentic\n  Program Repair",
      "summary": "Agentic Automated Program Repair (APR) is increasingly tackling complex,\nrepository-level bugs in industry, but ultimately agent-generated patches still\nneed to be reviewed by a human before committing them to ensure they address\nthe bug. Showing unlikely patches to developers can lead to substantial noise,\nwasting valuable developer time and eroding trust in automated code changes. We\nintroduce two complementary LLM-based policies to reduce such noise: bug\nabstention and patch validation policies. Bug abstention excludes bugs that the\nagentic APR system is unlikely to fix. Patch validation rejects patches that\nare unlikely to be a good fix for the given bug. We evaluate both policies on\nthree sets of bugs from Google's codebase, and their candidate patches\ngenerated by an internal agentic APR system. On a set of 174 human-reported\nbugs, removing bugs and patch trajectories rejected by our policies can raise\nsuccess rates by up to 13 percentage points and 15 percentage points,\nrespectively, and by up to 39 percentage points in combination. On null pointer\nexceptions and sanitizer-reported bugs with machine-generated bug reports,\npatch validation also improves average single-sample success rates. This\ntwo-policy approach provides a practical path to the reliable, industrial-scale\ndeployment of agentic APR systems.",
      "url": "http://arxiv.org/abs/2510.03217v1",
      "published_time_eastern_timestamp": 1759514008.0
    },
    {
      "title": "Cache-to-Cache: Direct Semantic Communication Between Large Language\n  Models",
      "summary": "Multi-LLM systems harness the complementary strengths of diverse Large\nLanguage Models, achieving performance and efficiency gains unattainable by a\nsingle model. In existing designs, LLMs communicate through text, forcing\ninternal representations to be transformed into output token sequences. This\nprocess both loses rich semantic information and incurs token-by-token\ngeneration latency. Motivated by these limitations, we ask: Can LLMs\ncommunicate beyond text? Oracle experiments show that enriching the KV-Cache\nsemantics can improve response quality without increasing cache size,\nsupporting KV-Cache as an effective medium for inter-model communication. Thus,\nwe propose Cache-to-Cache (C2C), a new paradigm for direct semantic\ncommunication between LLMs. C2C uses a neural network to project and fuse the\nsource model's KV-cache with that of the target model to enable direct semantic\ntransfer. A learnable gating mechanism selects the target layers that benefit\nfrom cache communication. Compared with text communication, C2C utilizes the\ndeep, specialized semantics from both models, while avoiding explicit\nintermediate text generation. Experiments show that C2C achieves 8.5-10.5%\nhigher average accuracy than individual models. It further outperforms the text\ncommunication paradigm by approximately 3.0-5.0%, while delivering an average\n2.0x speedup in latency. Our code is available at\nhttps://github.com/thu-nics/C2C.",
      "url": "http://arxiv.org/abs/2510.03215v1",
      "published_time_eastern_timestamp": 1759513952.0
    },
    {
      "title": "FocusAgent: Simple Yet Effective Ways of Trimming the Large Context of\n  Web Agents",
      "summary": "Web agents powered by large language models (LLMs) must process lengthy web\npage observations to complete user goals; these pages often exceed tens of\nthousands of tokens. This saturates context limits and increases computational\ncost processing; moreover, processing full pages exposes agents to security\nrisks such as prompt injection. Existing pruning strategies either discard\nrelevant content or retain irrelevant context, leading to suboptimal action\nprediction. We introduce FocusAgent, a simple yet effective approach that\nleverages a lightweight LLM retriever to extract the most relevant lines from\naccessibility tree (AxTree) observations, guided by task goals. By pruning\nnoisy and irrelevant content, FocusAgent enables efficient reasoning while\nreducing vulnerability to injection attacks. Experiments on WorkArena and\nWebArena benchmarks show that FocusAgent matches the performance of strong\nbaselines, while reducing observation size by over 50%. Furthermore, a variant\nof FocusAgent significantly reduces the success rate of prompt-injection\nattacks, including banner and pop-up attacks, while maintaining task success\nperformance in attack-free settings. Our results highlight that targeted\nLLM-based retrieval is a practical and robust strategy for building web agents\nthat are efficient, effective, and secure.",
      "url": "http://arxiv.org/abs/2510.03204v1",
      "published_time_eastern_timestamp": 1759513290.0
    },
    {
      "title": "Best-of-Majority: Minimax-Optimal Strategy for Pass@$k$ Inference\n  Scaling",
      "summary": "LLM inference often generates a batch of candidates for a prompt and selects\none via strategies like majority voting or Best-of- N (BoN). For difficult\ntasks, this single-shot selection often underperforms. Consequently,\nevaluations commonly report Pass@$k$: the agent may submit up to $k$ responses,\nand only the best of them is used when computing regret. Motivated by this, we\nstudy inference scaling in the more general Pass@$k$ inference setting, and\nprove that neither majority voting nor BoN exhibits the desirable scaling with\n$k$ and the sampling budget $N$. Combining the advantages of majority voting\nand BoN, we propose a new inference strategy called Best-of-Majority (BoM),\nwith a pivotal step that restricts the candidates to the responses with high\nfrequency in the $N$ samples before selecting the top-$k$ rewards. We prove\nthat when the sampling budget is $N=\\tilde\\Omega(C^*)$, the regret of BoM is\n$O(\\epsilon_{\\mathrm{opt}}+\\sqrt{\\epsilon_{\\mathrm{RM}}^2C^*/k})$, where $C^*$\nis the coverage coefficient, $\\epsilon_{\\mathrm{RM}}$ is the estimation error\nof the reward model, and $\\epsilon_{\\mathrm{opt}}$ is the estimation error of\nreward at the optimal response. We further establish a matching lower bound,\ncertifying that our algorithm is minimax optimal. Beyond optimality, BoM has a\nkey advantage: unlike majority voting and BoN, its performance does not degrade\nwhen increasing $N$. Experimental results of inference on math problems show\nBoM outperforming both majority voting and BoN.",
      "url": "http://arxiv.org/abs/2510.03199v1",
      "published_time_eastern_timestamp": 1759512945.0
    },
    {
      "title": "Can LLMs Hit Moving Targets? Tracking Evolving Signals in Corporate\n  Disclosures",
      "summary": "Moving targets -- managers' strategic shifting of key performance metrics\nwhen the original targets become difficult to achieve -- have been shown to\npredict subsequent stock underperformance. However, our work reveals that the\nmethod employed in that study exhibits two key limitations that hinder the\naccuracy -- noise in the extracted targets and loss of contextual information\n-- both of which stem primarily from the use of a named entity recognition\n(NER). To address these two limitations, we propose an LLM-based target\nextraction} method with a newly defined metric that better captures semantic\ncontext. This approach preserves semantic context beyond simple entity\nrecognition and yields consistently higher predictive power than the original\napproach. Overall, our approach enhances the granularity and accuracy of\nfinancial text-based performance prediction.",
      "url": "http://arxiv.org/abs/2510.03195v1",
      "published_time_eastern_timestamp": 1759512656.0
    },
    {
      "title": "CoDA: Agentic Systems for Collaborative Data Visualization",
      "summary": "Deep research has revolutionized data analysis, yet data scientists still\ndevote substantial time to manually crafting visualizations, highlighting the\nneed for robust automation from natural language queries. However, current\nsystems struggle with complex datasets containing multiple files and iterative\nrefinement. Existing approaches, including simple single- or multi-agent\nsystems, often oversimplify the task, focusing on initial query parsing while\nfailing to robustly manage data complexity, code errors, or final visualization\nquality. In this paper, we reframe this challenge as a collaborative\nmulti-agent problem. We introduce CoDA, a multi-agent system that employs\nspecialized LLM agents for metadata analysis, task planning, code generation,\nand self-reflection. We formalize this pipeline, demonstrating how\nmetadata-focused analysis bypasses token limits and quality-driven refinement\nensures robustness. Extensive evaluations show CoDA achieves substantial gains\nin the overall score, outperforming competitive baselines by up to 41.5%. This\nwork demonstrates that the future of visualization automation lies not in\nisolated code generation but in integrated, collaborative agentic workflows.",
      "url": "http://arxiv.org/abs/2510.03194v1",
      "published_time_eastern_timestamp": 1759512616.0
    },
    {
      "title": "PRISM-Physics: Causal DAG-Based Process Evaluation for Physics Reasoning",
      "summary": "Benchmarks for competition-style reasoning have advanced evaluation in\nmathematics and programming, yet physics remains comparatively explored. Most\nexisting physics benchmarks evaluate only final answers, which fail to capture\nreasoning processes, while recent stepwise methods rely on heuristic\nLLM-as-judge scoring or restrictive linear assumptions, limiting reliability\nand diagnostic validity. We introduce PRISM-Physics, a process-level evaluation\nframework and benchmark for complex physics reasoning problems. Solutions are\nrepresented as directed acyclic graphs (DAGs) of formulas, explicitly encoding\ncausal dependencies among intermediate steps to enable fine-grained,\ninterpretable, and theoretically grounded scoring. We prove the optimality of\nthe DAG representation and the corresponding scoring policy. Combining with a\nfully rule-based method for symbolic formula equivalence matching that we\ndeveloped, we ensure consistent validation across diverse formulations without\nheuristic judgments. Results show that our evaluation framework is more aligned\nwith human experts' scoring. Experiments on state-of-the-art LLMs reveal\npersistent reasoning failures in physics, while step-level scoring offers both\ndiagnostic insight and rich signals for later training. By combining structural\nrigor, theoretical guarantees, and symbolic validation, PRISM-Physics provides\na principled foundation for advancing process-level evaluation and guiding the\ndevelopment of models with deeper scientific reasoning capabilities.",
      "url": "http://arxiv.org/abs/2510.03185v1",
      "published_time_eastern_timestamp": 1759511343.0
    },
    {
      "title": "When Names Disappear: Revealing What LLMs Actually Understand About Code",
      "summary": "Large Language Models (LLMs) achieve strong results on code tasks, but how\nthey derive program meaning remains unclear. We argue that code communicates\nthrough two channels: structural semantics, which define formal behavior, and\nhuman-interpretable naming, which conveys intent. Removing the naming channel\nseverely degrades intent-level tasks such as summarization, where models\nregress to line-by-line descriptions. Surprisingly, we also observe consistent\nreductions on execution tasks that should depend only on structure, revealing\nthat current benchmarks reward memorization of naming patterns rather than\ngenuine semantic reasoning. To disentangle these effects, we introduce a suite\nof semantics-preserving obfuscations and show that they expose identifier\nleakage across both summarization and execution. Building on these insights, we\nrelease ClassEval-Obf, an obfuscation-enhanced benchmark that systematically\nsuppresses naming cues while preserving behavior. Our results demonstrate that\nClassEval-Obf reduces inflated performance gaps, weakens memorization\nshortcuts, and provides a more reliable basis for assessing LLMs' code\nunderstanding and generalization.",
      "url": "http://arxiv.org/abs/2510.03178v1",
      "published_time_eastern_timestamp": 1759510393.0
    },
    {
      "title": "Topic Modeling as Long-Form Generation: Can Long-Context LLMs\n  revolutionize NTM via Zero-Shot Prompting?",
      "summary": "Traditional topic models such as neural topic models rely on inference and\ngeneration networks to learn latent topic distributions. This paper explores a\nnew paradigm for topic modeling in the era of large language models, framing TM\nas a long-form generation task whose definition is updated in this paradigm. We\npropose a simple but practical approach to implement LLM-based topic model\ntasks out of the box (sample a data subset, generate topics and representative\ntext with our prompt, text assignment with keyword match). We then investigate\nwhether the long-form generation paradigm can beat NTMs via zero-shot\nprompting. We conduct a systematic comparison between NTMs and LLMs in terms of\ntopic quality and empirically examine the claim that \"a majority of NTMs are\noutdated.\"",
      "url": "http://arxiv.org/abs/2510.03174v1",
      "published_time_eastern_timestamp": 1759510112.0
    }
  ]
}