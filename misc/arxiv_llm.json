{
  "last_updated": "2025-08-24T17:09:58.876091-04:00",
  "papers": [
    {
      "title": "LiveMCP-101: Stress Testing and Diagnosing MCP-enabled Agents on\n  Challenging Queries",
      "summary": "Tool calling has emerged as a critical capability for AI agents to interact\nwith the real world and solve complex tasks. While the Model Context Protocol\n(MCP) provides a powerful standardized framework for tool integration, there is\na significant gap in benchmarking how well AI agents can effectively solve\nmulti-step tasks using diverse MCP tools in realistic, dynamic scenarios. In\nthis work, we present LiveMCP-101, a benchmark of 101 carefully curated\nreal-world queries, refined through iterative LLM rewriting and manual review,\nthat require coordinated use of multiple MCP tools including web search, file\noperations, mathematical reasoning, and data analysis. Moreover, we introduce a\nnovel evaluation approach that leverages ground-truth execution plans rather\nthan raw API outputs, better reflecting the evolving nature of real-world\nenvironments. Experiments show that even frontier LLMs achieve a success rate\nbelow 60\\%, highlighting major challenges in tool orchestration. Detailed\nablations and error analysis further reveal distinct failure modes and\ninefficiencies in token usage, pointing to concrete directions for advancing\ncurrent models. LiveMCP-101 sets a rigorous standard for evaluating real-world\nagent capabilities, advancing toward autonomous AI systems that reliably\nexecute complex tasks through tool use.",
      "url": "http://arxiv.org/abs/2508.15760v1",
      "published_time_eastern_timestamp": 1755798954.0
    },
    {
      "title": "Dissecting Tool-Integrated Reasoning: An Empirical Study and Analysis",
      "summary": "Large Language Models (LLMs) have made significant strides in reasoning tasks\nthrough methods like chain-of-thought (CoT) reasoning. However, they often fall\nshort in tasks requiring precise computations. Tool-Integrated Reasoning (TIR)\nhas emerged as a solution by incorporating external tools into the reasoning\nprocess. Nevertheless, the generalization of TIR in improving the reasoning\nability of LLM is still unclear. Additionally, whether TIR has improved the\nmodel's reasoning behavior and helped the model think remains to be studied. We\nintroduce ReasonZoo, a comprehensive benchmark encompassing nine diverse\nreasoning categories, to evaluate the effectiveness of TIR across various\ndomains. Additionally, we propose two novel metrics, Performance-Aware Cost\n(PAC) and Area Under the Performance-Cost Curve (AUC-PCC), to assess reasoning\nefficiency. Our empirical evaluation demonstrates that TIR-enabled models\nconsistently outperform their non-TIR counterparts in both mathematical and\nnon-mathematical tasks. Furthermore, TIR enhances reasoning efficiency, as\nevidenced by improved PAC and AUC-PCC, indicating reduced overthinking and more\nstreamlined reasoning. These findings underscore the domain-general benefits of\nTIR and its potential to advance LLM capabilities in complex reasoning tasks.",
      "url": "http://arxiv.org/abs/2508.15754v1",
      "published_time_eastern_timestamp": 1755798624.0
    },
    {
      "title": "End-to-End Agentic RAG System Training for Traceable Diagnostic\n  Reasoning",
      "summary": "Accurate diagnosis with medical large language models is hindered by\nknowledge gaps and hallucinations. Retrieval and tool-augmented methods help,\nbut their impact is limited by weak use of external knowledge and poor\nfeedback-reasoning traceability. To address these challenges, We introduce\nDeep-DxSearch, an agentic RAG system trained end-to-end with reinforcement\nlearning (RL) that enables steer tracebale retrieval-augmented reasoning for\nmedical diagnosis. In Deep-DxSearch, we first construct a large-scale medical\nretrieval corpus comprising patient records and reliable medical knowledge\nsources to support retrieval-aware reasoning across diagnostic scenarios. More\ncrutially, we frame the LLM as the core agent and the retrieval corpus as its\nenvironment, using tailored rewards on format, retrieval, reasoning structure,\nand diagnostic accuracy, thereby evolving the agentic RAG policy from\nlarge-scale data through RL.\n  Experiments demonstrate that our end-to-end agentic RL training framework\nconsistently outperforms prompt-engineering and training-free RAG approaches\nacross multiple data centers. After training, Deep-DxSearch achieves\nsubstantial gains in diagnostic accuracy, surpassing strong diagnostic\nbaselines such as GPT-4o, DeepSeek-R1, and other medical-specific frameworks\nfor both common and rare disease diagnosis under in-distribution and\nout-of-distribution settings. Moreover, ablation studies on reward design and\nretrieval corpus components confirm their critical roles, underscoring the\nuniqueness and effectiveness of our approach compared with traditional\nimplementations. Finally, case studies and interpretability analyses highlight\nimprovements in Deep-DxSearch's diagnostic policy, providing deeper insight\ninto its performance gains and supporting clinicians in delivering more\nreliable and precise preliminary diagnoses. See\nhttps://github.com/MAGIC-AI4Med/Deep-DxSearch.",
      "url": "http://arxiv.org/abs/2508.15746v1",
      "published_time_eastern_timestamp": 1755798167.0
    },
    {
      "title": "Communication Efficient LLM Pre-training with SparseLoCo",
      "summary": "Communication-efficient distributed training algorithms have received\nconsiderable interest recently due to their benefits for training Large\nLanguage Models (LLMs) in bandwidth-constrained settings, such as across data\ncenters and over the internet. Despite reducing communication frequency, these\nmethods still typically require communicating a full copy of the model's\ngradients-resulting in a communication bottleneck even for cross-datacenter\nlinks. Furthermore, they can slightly degrade performance compared to a naive\nAdamW DDP baseline. While quantization and error feedback are often applied to\nreduce the pseudo-gradient's size, in the context of LLM pre-training, existing\napproaches have been unable to additionally leverage sparsification and have\nobtained limited quantization. In this work, we introduce SparseLoCo, a\ncommunication-efficient training algorithm for LLMs that effectively leverages\nTop-k sparsification and quantization to reach extreme compression ratios of up\nto 1-3% sparsity and 2-bit quantization while outperforming full-precision\nDiLoCo. Our key observations are that outer momentum can be locally\napproximated by an error feedback combined with aggressive sparsity and that\nsparse aggregation can actually improve model performance. We empirically\ndemonstrate in a range of communication-constrained LLM training settings that\nSparseLoCo provides significant benefits in both performance and communication\ncost.",
      "url": "http://arxiv.org/abs/2508.15706v1",
      "published_time_eastern_timestamp": 1755794899.0
    },
    {
      "title": "NiceWebRL: a Python library for human subject experiments with\n  reinforcement learning environments",
      "summary": "We present NiceWebRL, a research tool that enables researchers to use machine\nreinforcement learning (RL) environments for online human subject experiments.\nNiceWebRL is a Python library that allows any Jax-based environment to be\ntransformed into an online interface, supporting both single-agent and\nmulti-agent environments. As such, NiceWebRL enables AI researchers to compare\ntheir algorithms to human performance, cognitive scientists to test ML\nalgorithms as theories for human cognition, and multi-agent researchers to\ndevelop algorithms for human-AI collaboration. We showcase NiceWebRL with 3\ncase studies that demonstrate its potential to help develop Human-like AI,\nHuman-compatible AI, and Human-assistive AI. In the first case study\n(Human-like AI), NiceWebRL enables the development of a novel RL model of\ncognition. Here, NiceWebRL facilitates testing this model against human\nparticipants in both a grid world and Craftax, a 2D Minecraft domain. In our\nsecond case study (Human-compatible AI), NiceWebRL enables the development of a\nnovel multi-agent RL algorithm that can generalize to human partners in the\nOvercooked domain. Finally, in our third case study (Human-assistive AI), we\nshow how NiceWebRL can allow researchers to study how an LLM can assist humans\non complex tasks in XLand-Minigrid, an environment with millions of\nhierarchical tasks. The library is available at\nhttps://github.com/KempnerInstitute/nicewebrl.",
      "url": "http://arxiv.org/abs/2508.15693v1",
      "published_time_eastern_timestamp": 1755793129.0
    },
    {
      "title": "LLM-empowered Dynamic Prompt Routing for Vision-Language Models Tuning\n  under Long-Tailed Distributions",
      "summary": "Pre-trained vision-language models (VLMs), such as CLIP, have demonstrated\nimpressive capability in visual tasks, but their fine-tuning often suffers from\nbias in class-imbalanced scene. Recent works have introduced large language\nmodels (LLMs) to enhance VLM fine-tuning with supplementing semantic\ninformation. However, they often overlook inherent class imbalance in VLMs'\npre-training, which may lead to bias accumulation in downstream tasks. To\naddress this problem, this paper proposes a Multi-dimensional Dynamic Prompt\nRouting (MDPR) framework. MDPR constructs a comprehensive knowledge base for\nclasses, spanning five visual-semantic dimensions. During fine-tuning, the\ndynamic routing mechanism aligns global visual classes, retrieves optimal\nprompts, and balances fine-grained semantics, yielding stable predictions\nthrough logits fusion. Extensive experiments on long-tailed benchmarks,\nincluding CIFAR-LT, ImageNet-LT, and Places-LT, demonstrate that MDPR achieves\ncomparable results with current SOTA methods. Ablation studies further confirm\nthe effectiveness of our semantic library for tail classes, and show that our\ndynamic routing incurs minimal computational overhead, making MDPR a flexible\nand efficient enhancement for VLM fine-tuning under data imbalance.",
      "url": "http://arxiv.org/abs/2508.15688v1",
      "published_time_eastern_timestamp": 1755792726.0
    },
    {
      "title": "Benchmarking Computer Science Survey Generation",
      "summary": "Scientific survey articles play a vital role in summarizing research\nprogress, yet their manual creation is becoming increasingly infeasible due to\nthe rapid growth of academic literature. While large language models (LLMs)\noffer promising capabilities for automating this process, progress in this area\nis hindered by the absence of standardized benchmarks and evaluation protocols.\nTo address this gap, we introduce SurGE (Survey Generation Evaluation), a new\nbenchmark for evaluating scientific survey generation in the computer science\ndomain. SurGE consists of (1) a collection of test instances, each including a\ntopic description, an expert-written survey, and its full set of cited\nreferences, and (2) a large-scale academic corpus of over one million papers\nthat serves as the retrieval pool. In addition, we propose an automated\nevaluation framework that measures generated surveys across four dimensions:\ninformation coverage, referencing accuracy, structural organization, and\ncontent quality. Our evaluation of diverse LLM-based approaches shows that\nsurvey generation remains highly challenging, even for advanced self-reflection\nframeworks. These findings highlight the complexity of the task and the\nnecessity for continued research. We have open-sourced all the code, data, and\nmodels at: https://github.com/oneal2000/SurGE",
      "url": "http://arxiv.org/abs/2508.15658v1",
      "published_time_eastern_timestamp": 1755791110.0
    },
    {
      "title": "SDGO: Self-Discrimination-Guided Optimization for Consistent Safety in\n  Large Language Models",
      "summary": "Large Language Models (LLMs) excel at various natural language processing\ntasks but remain vulnerable to jailbreaking attacks that induce harmful content\ngeneration. In this paper, we reveal a critical safety inconsistency: LLMs can\nmore effectively identify harmful requests as discriminators than defend\nagainst them as generators. This insight inspires us to explore aligning the\nmodel's inherent discrimination and generation capabilities. To this end, we\npropose SDGO (Self-Discrimination-Guided Optimization), a reinforcement\nlearning framework that leverages the model's own discrimination capabilities\nas a reward signal to enhance generation safety through iterative\nself-improvement. Our method does not require any additional annotated data or\nexternal models during the training phase. Extensive experiments demonstrate\nthat SDGO significantly improves model safety compared to both prompt-based and\ntraining-based baselines while maintaining helpfulness on general benchmarks.\nBy aligning LLMs' discrimination and generation capabilities, SDGO brings\nrobust performance against out-of-distribution (OOD) jailbreaking attacks. This\nalignment achieves tighter coupling between these two capabilities, enabling\nthe model's generation capability to be further enhanced with only a small\namount of discriminative samples. Our code and datasets are available at\nhttps://github.com/NJUNLP/SDGO.",
      "url": "http://arxiv.org/abs/2508.15648v1",
      "published_time_eastern_timestamp": 1755789969.0
    },
    {
      "title": "When and What: Diffusion-Grounded VideoLLM with Entity Aware\n  Segmentation for Long Video Understanding",
      "summary": "Understanding videos requires more than answering open ended questions, it\ndemands the ability to pinpoint when events occur and how entities interact\nacross time. While recent Video LLMs have achieved remarkable progress in\nholistic reasoning, they remain coarse in temporal perception: timestamps are\nencoded only implicitly, frame level features are weak in capturing continuity,\nand language vision alignment often drifts from the entities of interest. In\nthis paper, we present Grounded VideoDiT, a Video LLM designed to overcome\nthese limitations by introducing three key innovations. First, a Diffusion\nTemporal Latent (DTL) encoder enhances boundary sensitivity and maintains\ntemporal consistency. Second, object grounded representations explicitly bind\nquery entities to localized visual evidence, strengthening alignment. Third, a\nmixed token scheme with discrete temporal tokens provides explicit timestamp\nmodeling, enabling fine grained temporal reasoning. Together, these designs\nequip Grounded VideoDiT with robust grounding capabilities, as validated by\nstate of the art results on Charades STA, NExT GQA, and multiple VideoQA\nbenchmarks.",
      "url": "http://arxiv.org/abs/2508.15641v1",
      "published_time_eastern_timestamp": 1755789134.0
    },
    {
      "title": "Trained Miniatures: Low cost, High Efficacy SLMs for Sales & Marketing",
      "summary": "Large language models (LLMs) excel in text generation; however, these\ncreative elements require heavy computation and are accompanied by a steep\ncost. Especially for targeted applications such as sales and marketing\noutreach, these costs are far from feasible. This paper introduces the concept\nof \"Trained Miniatures\" - Small Language Models(SLMs) fine-tuned for specific,\nhigh-value applications, generating similar domain-specific responses for a\nfraction of the cost.",
      "url": "http://arxiv.org/abs/2508.15617v1",
      "published_time_eastern_timestamp": 1755787582.0
    },
    {
      "title": "Transduction is All You Need for Structured Data Workflows",
      "summary": "This paper introduces Agentics, a modular framework for building agent-based\nsystems capable of structured reasoning and compositional generalization over\ncomplex data. Designed with research and practical applications in mind,\nAgentics offers a novel perspective on working with data and AI workflows. In\nthis framework, agents are abstracted from the logical flow and they are used\ninternally to the data type to enable logical transduction among data. Agentics\nencourages AI developers to focus on modeling data rather than crafting\nprompts, enabling a declarative language in which data types are provided by\nLLMs and composed through logical transduction, which is executed by LLMs when\ntypes are connected. We provide empirical evidence demonstrating the\napplicability of this framework across domain-specific multiple-choice question\nanswering, semantic parsing for text-to-SQL, and automated prompt optimization\ntasks, achieving state-of-the-art accuracy or improved scalability without\nsacrificing performance. The open-source implementation is available at\n\\texttt{https://github.com/IBM/agentics}.",
      "url": "http://arxiv.org/abs/2508.15610v1",
      "published_time_eastern_timestamp": 1755786947.0
    },
    {
      "title": "Towards Scalable and Interpretable Mobile App Risk Analysis via Large\n  Language Models",
      "summary": "Mobile application marketplaces are responsible for vetting apps to identify\nand mitigate security risks. Current vetting processes are labor-intensive,\nrelying on manual analysis by security professionals aided by semi-automated\ntools. To address this inefficiency, we propose Mars, a system that leverages\nLarge Language Models (LLMs) for automated risk identification and profiling.\nMars is designed to concurrently analyze multiple applications across diverse\nrisk categories with minimal human intervention. To enhance analytical\nprecision and operational efficiency, Mars leverages a pre-constructed risk\nidentification tree to extract relevant indicators from high-dimensional\napplication features. This initial step filters the data, reducing the input\nvolume for the LLM and mitigating the potential for model hallucination induced\nby irrelevant features. The extracted indicators are then subjected to LLM\nanalysis for final risk determination. Furthermore, Mars automatically\ngenerates a comprehensive evidence chain for each assessment, documenting the\nanalytical process to provide transparent justification. These chains are\ndesigned to facilitate subsequent manual review and to inform enforcement\ndecisions, such as application delisting. The performance of Mars was evaluated\non a real-world dataset from a partner Android marketplace. The results\ndemonstrate that Mars attained an F1-score of 0.838 in risk identification and\nan F1-score of 0.934 in evidence retrieval. To assess its practical\napplicability, a user study involving 20 expert analysts was conducted, which\nindicated that Mars yielded a substantial efficiency gain, ranging from 60% to\n90%, over conventional manual analysis.",
      "url": "http://arxiv.org/abs/2508.15606v1",
      "published_time_eastern_timestamp": 1755786793.0
    },
    {
      "title": "Efficient Mixed-Precision Large Language Model Inference with TurboMind",
      "summary": "Mixed-precision inference techniques reduce the memory and computational\ndemands of Large Language Models (LLMs) by applying hybrid precision formats to\nmodel weights, activations, and KV caches. This work introduces mixed-precision\nLLM inference techniques that encompass (i) systematic memory and compute\noptimization across hierarchical storage and tensor core architectures, and\n(ii) comprehensive end-to-end mixed-precision optimization across diverse\nprecision formats and hardware configurations. Our approach features two novel\nmixed-precision pipelines designed for optimal hardware utilization: a General\nMatrix Multiply (GEMM) pipeline that optimizes matrix operations through\noffline weight packing and online acceleration, and an attention pipeline that\nenables efficient attention computation with arbitrary Query, Key, and Value\nprecision combinations. The key implementation of the pipelines includes (i)\nhardware-aware weight packing for automatic format optimization, (ii) adaptive\nhead alignment for efficient attention computation, (iii) instruction-level\nparallelism for memory hierarchy exploitation, and (iv) KV memory loading\npipeline for enhanced inference efficiency. We conduct comprehensive\nevaluations across 16 popular LLMs and 4 representative GPU architectures.\nResults demonstrate that our approach achieves up to 61% lower serving latency\n(30% on average) and up to 156% higher throughput (58% on average) in\nmixed-precision workloads compared to existing mixed-precision frameworks,\nestablishing consistent performance improvements across all tested\nconfigurations and hardware types. This work is integrated into TurboMind, a\nhigh-performance inference engine of the LMDeploy project, which is\nopen-sourced and publicly available at https://github.com/InternLM/lmdeploy.",
      "url": "http://arxiv.org/abs/2508.15601v1",
      "published_time_eastern_timestamp": 1755786292.0
    },
    {
      "title": "Interface on demand: Towards AI native Control interfaces for 6G",
      "summary": "Traditional standardized network interfaces face significant limitations,\nincluding vendor-specific incompatibilities, rigid design assumptions, and lack\nof adaptability for new functionalities. We propose a multi-agent framework\nleveraging large language models (LLMs) to generate control interfaces on\ndemand between network functions (NFs). This includes a matching agent, which\naligns required control functionalities with NF capabilities, and a\ncode-generation agent, which generates the necessary API server for interface\nrealization. We validate our approach using simulated multi-vendor gNB and WLAN\nAP environments. The performance evaluations highlight the trade-offs between\ncost and latency across LLMs for interface generation tasks. Our work sets the\nfoundation for AI-native dynamic control interface generation, paving the way\nfor enhanced interoperability and adaptability in future mobile networks.",
      "url": "http://arxiv.org/abs/2508.15595v1",
      "published_time_eastern_timestamp": 1755785311.0
    },
    {
      "title": "DeepThink3D: Enhancing Large Language Models with Programmatic Reasoning\n  in Complex 3D Situated Reasoning Tasks",
      "summary": "This work enhances the ability of large language models (LLMs) to perform\ncomplex reasoning in 3D scenes. Recent work has addressed the 3D situated\nreasoning task by invoking tool usage through large language models. Large\nlanguage models call tools via APIs and integrate the generated programs\nthrough a chain of thought to solve problems based on the program results.\nHowever, due to the simplicity of the questions in the dataset, the generated\nprogram reasoning chains are relatively short. To solve this main challenge, in\nthis paper, we introduce DeepThink3D to enhance the tool usage of LLMs in\ncomplex 3D situated reasoning tasks. Our work proposes a combinatorial and\niterative evolutionary approach on the SQA3D benchmark to generate more complex\nquestions. Building on this foundation, we fine-tune the large language model\nto make it more proficient in using 3D tools. By employing Direct Preference\nOptimization (DPO), we directly optimize the toolchain strategies generated by\nmodels, thereby enhancing their accuracy in complex tasks.",
      "url": "http://arxiv.org/abs/2508.15548v1",
      "published_time_eastern_timestamp": 1755782916.0
    },
    {
      "title": "SafetyFlow: An Agent-Flow System for Automated LLM Safety Benchmarking",
      "summary": "The rapid proliferation of large language models (LLMs) has intensified the\nrequirement for reliable safety evaluation to uncover model vulnerabilities. To\nthis end, numerous LLM safety evaluation benchmarks are proposed. However,\nexisting benchmarks generally rely on labor-intensive manual curation, which\ncauses excessive time and resource consumption. They also exhibit significant\nredundancy and limited difficulty. To alleviate these problems, we introduce\nSafetyFlow, the first agent-flow system designed to automate the construction\nof LLM safety benchmarks. SafetyFlow can automatically build a comprehensive\nsafety benchmark in only four days without any human intervention by\norchestrating seven specialized agents, significantly reducing time and\nresource cost. Equipped with versatile tools, the agents of SafetyFlow ensure\nprocess and cost controllability while integrating human expertise into the\nautomatic pipeline. The final constructed dataset, SafetyFlowBench, contains\n23,446 queries with low redundancy and strong discriminative power. Our\ncontribution includes the first fully automated benchmarking pipeline and a\ncomprehensive safety benchmark. We evaluate the safety of 49 advanced LLMs on\nour dataset and conduct extensive experiments to validate our efficacy and\nefficiency.",
      "url": "http://arxiv.org/abs/2508.15526v1",
      "published_time_eastern_timestamp": 1755781253.0
    },
    {
      "title": "The Enemy from Within: A Study of Political Delegitimization Discourse\n  in Israeli Political Speech",
      "summary": "We present the first large-scale computational study of political\ndelegitimization discourse (PDD), defined as symbolic attacks on the normative\nvalidity of political entities. We curate and manually annotate a novel\nHebrew-language corpus of 10,410 sentences drawn from Knesset speeches\n(1993-2023), Facebook posts (2018-2021), and leading news outlets, of which\n1,812 instances (17.4\\%) exhibit PDD and 642 carry additional annotations for\nintensity, incivility, target type, and affective framing. We introduce a\ntwo-stage classification pipeline combining finetuned encoder models and\ndecoder LLMs. Our best model (DictaLM 2.0) attains an F$_1$ of 0.74 for binary\nPDD detection and a macro-F$_1$ of 0.67 for classification of delegitimization\ncharacteristics. Applying this classifier to longitudinal and cross-platform\ndata, we see a marked rise in PDD over three decades, higher prevalence on\nsocial media versus parliamentary debate, greater use by male than female\npoliticians, and stronger tendencies among right-leaning actors - with\npronounced spikes during election campaigns and major political events. Our\nfindings demonstrate the feasibility and value of automated PDD analysis for\nunderstanding democratic discourse.",
      "url": "http://arxiv.org/abs/2508.15524v1",
      "published_time_eastern_timestamp": 1755781024.0
    },
    {
      "title": "Super-additive Cooperation in Language Model Agents",
      "summary": "With the prospect of autonomous artificial intelligence (AI) agents, studying\ntheir tendency for cooperative behavior becomes an increasingly relevant topic.\nThis study is inspired by the super-additive cooperation theory, where the\ncombined effects of repeated interactions and inter-group rivalry have been\nargued to be the cause for cooperative tendencies found in humans. We devised a\nvirtual tournament where language model agents, grouped into teams, face each\nother in a Prisoner's Dilemma game. By simulating both internal team dynamics\nand external competition, we discovered that this blend substantially boosts\nboth overall and initial, one-shot cooperation levels (the tendency to\ncooperate in one-off interactions). This research provides a novel framework\nfor large language models to strategize and act in complex social scenarios and\noffers evidence for how intergroup competition can, counter-intuitively, result\nin more cooperative behavior. These insights are crucial for designing future\nmulti-agent AI systems that can effectively work together and better align with\nhuman values. Source code is available at\nhttps://github.com/pippot/Superadditive-cooperation-LLMs.",
      "url": "http://arxiv.org/abs/2508.15510v1",
      "published_time_eastern_timestamp": 1755779804.0
    },
    {
      "title": "Think in Blocks: Adaptive Reasoning from Direct Response to Deep\n  Reasoning",
      "summary": "Large Language Models (LLMs) with chains-of-thought have demonstrated strong\nperformance on an increasing range of tasks, particularly those involving\ncomplex logical reasoning. However, excessively long chains can lead to\noverthinking, causing computational waste and slower responses. This raises a\nquestion: can LLMs dynamically adjust the length of their reasoning processes\nbased on task complexity? To address this, we propose the Think in Blocks\nframework, which enables adaptive reasoning-from zero to deep reasoning-by\npartitioning the reasoning process into a tunable number of blocks. Our main\ncontributions are: (1) Establishing an explicit block-structured paradigm in\nwhich the model first predicts an integer reasoning budget-the number of\nblocks-and then partitions its reasoning accordingly; (2) Training an adaptive\nmodel through a three-stage pipeline-Supervised Fine-Tuning, reward-guided\nDirect Preference Optimization, and Reinforcement Learning-that adjusts its\nreasoning depth to problem difficulty; (3) Exploiting the explicit block count\nto dynamically control reasoning depth at inference time, allowing flexible\nadjustment of chain-of-thought length during deployment.",
      "url": "http://arxiv.org/abs/2508.15507v1",
      "published_time_eastern_timestamp": 1755779539.0
    },
    {
      "title": "Evaluation Guidelines for Empirical Studies in Software Engineering\n  involving LLMs",
      "summary": "Large language models (LLMs) are increasingly being integrated into software\nengineering (SE) research and practice, yet their non-determinism, opaque\ntraining data, and evolving architectures complicate the reproduction and\nreplication of empirical studies. We present a community effort to scope this\nspace, introducing a taxonomy of LLM-based study types together with eight\nguidelines for designing and reporting empirical studies involving LLMs. The\nguidelines present essential (must) criteria as well as desired (should)\ncriteria and target transparency throughout the research process. Our\nrecommendations, contextualized by our study types, are: (1) to declare LLM\nusage and role; (2) to report model versions, configurations, and fine-tuning;\n(3) to document tool architectures; (4) to disclose prompts and interaction\nlogs; (5) to use human validation; (6) to employ an open LLM as a baseline; (7)\nto report suitable baselines, benchmarks, and metrics; and (8) to openly\narticulate limitations and mitigations. Our goal is to enable reproducibility\nand replicability despite LLM-specific barriers to open science. We maintain\nthe study types and guidelines online as a living resource for the community to\nuse and shape (llm-guidelines.org).",
      "url": "http://arxiv.org/abs/2508.15503v1",
      "published_time_eastern_timestamp": 1755779430.0
    }
  ]
}