{
  "last_updated": "2025-10-23T20:52:46.659151-04:00",
  "papers": [
    {
      "title": "Hubble: a Model Suite to Advance the Study of LLM Memorization",
      "summary": "We present Hubble, a suite of fully open-source large language models (LLMs)\nfor the scientific study of LLM memorization. Hubble models come in standard\nand perturbed variants: standard models are pretrained on a large English\ncorpus, and perturbed models are trained in the same way but with controlled\ninsertion of text (e.g., book passages, biographies, and test sets) designed to\nemulate key memorization risks. Our core release includes 8 models -- standard\nand perturbed models with 1B or 8B parameters, pretrained on 100B or 500B\ntokens -- establishing that memorization risks are determined by the frequency\nof sensitive data relative to size of the training corpus (i.e., a password\nappearing once in a smaller corpus is memorized better than the same password\nin a larger corpus). Our release also includes 6 perturbed models with text\ninserted at different pretraining phases, showing that sensitive data without\ncontinued exposure can be forgotten. These findings suggest two best practices\nfor addressing memorization risks: to dilute sensitive data by increasing the\nsize of the training corpus, and to order sensitive data to appear earlier in\ntraining. Beyond these general empirical findings, Hubble enables a broad range\nof memorization research; for example, analyzing the biographies reveals how\nreadily different types of private information are memorized. We also\ndemonstrate that the randomized insertions in Hubble make it an ideal testbed\nfor membership inference and machine unlearning, and invite the community to\nfurther explore, benchmark, and build upon our work.",
      "url": "http://arxiv.org/abs/2510.19811v1",
      "published_time_eastern_timestamp": 1761155303.0
    },
    {
      "title": "Scaf-GRPO: Scaffolded Group Relative Policy Optimization for Enhancing\n  LLM Reasoning",
      "summary": "Reinforcement learning from verifiable rewards has emerged as a powerful\ntechnique for enhancing the complex reasoning abilities of Large Language\nModels (LLMs). However, these methods are fundamentally constrained by the\n''learning cliff'' phenomenon: when faced with problems far beyond their\ncurrent capabilities, models consistently fail, yielding a persistent\nzero-reward signal. In policy optimization algorithms like GRPO, this collapses\nthe advantage calculation to zero, rendering these difficult problems invisible\nto the learning gradient and stalling progress. To overcome this, we introduce\nScaf-GRPO (Scaffolded Group Relative Policy Optimization), a progressive\ntraining framework that strategically provides minimal guidance only when a\nmodel's independent learning has plateaued. The framework first diagnoses\nlearning stagnation and then intervenes by injecting tiered in-prompt hints,\nranging from abstract concepts to concrete steps, enabling the model to\nconstruct a valid solution by itself. Extensive experiments on challenging\nmathematics benchmarks demonstrate Scaf-GRPO's effectiveness, boosting the\npass@1 score of the Qwen2.5-Math-7B model on the AIME24 benchmark by a relative\n44.3% over a vanilla GRPO baseline. This result demonstrates our framework\nprovides a robust and effective methodology for unlocking a model's ability to\nsolve problems previously beyond its reach, a critical step towards extending\nthe frontier of autonomous reasoning in LLM.",
      "url": "http://arxiv.org/abs/2510.19807v1",
      "published_time_eastern_timestamp": 1761154890.0
    },
    {
      "title": "The Art of Asking: Multilingual Prompt Optimization for Synthetic Data",
      "summary": "Synthetic data has become a cornerstone for scaling large language models,\nyet its multilingual use remains bottlenecked by translation-based prompts.\nThis strategy inherits English-centric framing and style and neglects cultural\ndimensions, ultimately constraining model generalization. We argue that the\noverlooked prompt space-the very inputs that define training\ndistributions-offers a more powerful lever for improving multilingual\nperformance. We introduce a lightweight framework for prompt-space\noptimization, where translated prompts are systematically transformed for\nNaturalness, Cultural Adaptation, and Difficulty Enhancement. Using an\noff-the-shelf multilingual LLM, we apply these transformations to prompts for\n12 languages spanning 7 families. Under identical data conditions, our\napproaches achieve substantial and consistent downstream improvements over the\ntranslation-only baseline: +4.7% on Global-MMLU accuracy, +2.4% on Flores\nXCometXL and +35.3% wins in preferences on mArenaHard. We establish\nprompt-space optimization as a simple yet powerful paradigm for building\nmultilingual LLMs that are more robust, culturally grounded, and globally\ncapable.",
      "url": "http://arxiv.org/abs/2510.19806v1",
      "published_time_eastern_timestamp": 1761154880.0
    },
    {
      "title": "Integrating Transparent Models, LLMs, and Practitioner-in-the-Loop: A\n  Case of Nonprofit Program Evaluation",
      "summary": "Public and nonprofit organizations often hesitate to adopt AI tools because\nmost models are opaque even though standard approaches typically analyze\naggregate patterns rather than offering actionable, case-level guidance. This\nstudy tests a practitioner-in-the-loop workflow that pairs transparent\ndecision-tree models with large language models (LLMs) to improve predictive\naccuracy, interpretability, and the generation of practical insights. Using\ndata from an ongoing college-success program, we build interpretable decision\ntrees to surface key predictors. We then provide each tree's structure to an\nLLM, enabling it to reproduce case-level predictions grounded in the\ntransparent models. Practitioners participate throughout feature engineering,\nmodel design, explanation review, and usability assessment, ensuring that field\nexpertise informs the analysis at every stage. Results show that integrating\ntransparent models, LLMs, and practitioner input yields accurate, trustworthy,\nand actionable case-level evaluations, offering a viable pathway for\nresponsible AI adoption in the public and nonprofit sectors.",
      "url": "http://arxiv.org/abs/2510.19799v1",
      "published_time_eastern_timestamp": 1761154513.0
    },
    {
      "title": "ToolDreamer: Instilling LLM Reasoning Into Tool Retrievers",
      "summary": "Tool calling has become increasingly popular for Large Language Models\n(LLMs). However, for large tool sets, the resulting tokens would exceed the\nLLM's context window limit, making it impossible to include every tool. Hence,\nan external retriever is used to provide LLMs with the most relevant tools for\na query. Existing retrieval models rank tools based on the similarity between a\nuser query and a tool description (TD). This leads to suboptimal retrieval as\nuser requests are often poorly aligned with the language of TD. To remedy the\nissue, we propose ToolDreamer, a framework to condition retriever models to\nfetch tools based on hypothetical (synthetic) TD generated using an LLM, i.e.,\ndescription of tools that the LLM feels will be potentially useful for the\nquery. The framework enables a more natural alignment between queries and tools\nwithin the language space of TD's. We apply ToolDreamer on the ToolRet dataset\nand show that our method improves the performance of sparse and dense\nretrievers with and without training, thus showcasing its flexibility. Through\nour proposed framework, our aim is to offload a portion of the reasoning burden\nto the retriever so that the LLM may effectively handle a large collection of\ntools without inundating its context window.",
      "url": "http://arxiv.org/abs/2510.19791v1",
      "published_time_eastern_timestamp": 1761153965.0
    },
    {
      "title": "Adapting Multilingual Models to Code-Mixed Tasks via Model Merging",
      "summary": "We study model merging as a practical alternative to conventional adaptation\nstrategies for code-mixed NLP. Starting from a multilingual base model, we: (i)\nperform continued pre-training (CPT) on unlabeled code-mixed text to obtain an\nadapted checkpoint, (ii) merge checkpoint with the base model, and (iii)\nfine-tune (FT) on the downstream task data. We evaluate our approach for\nsentence classification (sentiment and hate speech) task in English-Hindi\n(En-Hi) and English-Spanish (En-Es) using XLM-R and Llama-3.2-1B models. Our\nresults show that merged models consistently outperform full fine-tuning and\nCPT->FT. We observe gains of 2--5 points in F1 over full fine-tuning and ~1-2\npoints over CPT->FT, indicating that unlabeled data is leveraged more\neffectively via merging than via CPT alone. Zero-/few-shot prompting with\nlarger LLMs (e.g., Llama-3.3-70B) lags behind fine-tuned and merged\ncheckpoints, underscoring limits of in-context learning for code-mixed inputs.\nWe further test cross-pair transfer by training on En-Hi and evaluating on\nEn-Ta and En-Ml: merged checkpoints transfer more strongly than\nmonolingual-English baselines (e.g., TV/TIES variants reaching 0.65-0.68 F1 vs\n0.61-0.63 for full fine-tuning), suggesting that code-mixed knowledge is a more\nreliable substrate for low-resource pairs. We conclude with adaptation recipes\nmatched to common data regimes (labeled only; labeled+unlabeled; transfer-only)\nand discuss limitations and scaling considerations for broader tasks and larger\nmodels.",
      "url": "http://arxiv.org/abs/2510.19782v2",
      "published_time_eastern_timestamp": 1761153383.0
    },
    {
      "title": "GaLLoP: Gradient-based Sparse Learning on Low-Magnitude Parameters",
      "summary": "Sparse fine-tuning techniques adapt LLMs to downstream tasks by only tuning a\nsparse subset of model parameters. However, the effectiveness of sparse\nadaptation depends on optimally selecting the model parameters to be\nfine-tuned. In this work, we introduce a novel sparse fine-tuning technique\nnamed GaLLoP: Gradient-based Sparse Learning on Low-Magnitude Parameters, which\nfine-tunes only those model parameters which have the largest gradient\nmagnitudes on downstream tasks and the smallest pre-trained magnitudes,\nintuitively prioritizing parameters that are highly task-relevant, but\nminimally disruptive to pre-trained knowledge. Our experimentation with LLaMA3\n8B and Gemma 2B as base models shows that GaLLoP consistently improves or\nmatches the in-distribution as well as out-of-distribution performance obtained\nvia the usage of other leading parameter-efficient fine-tuning techniques,\nincluding LoRA, DoRA, and SAFT. Our analysis demonstrates that GaLLoP mitigates\ncatastrophic forgetting and memorization of task data, as important pre-trained\nparameters remain unchanged, and stabilizes performance relative to other\nfine-tuning techniques, robustly generalizing across most random seeds.",
      "url": "http://arxiv.org/abs/2510.19778v1",
      "published_time_eastern_timestamp": 1761153109.0
    },
    {
      "title": "BOSQTGEN: Breaking the Sound Barrier in Test Generation",
      "summary": "Modern software is increasingly built by composing APIs, elevating the API\ncontract to a critical role. Inadequate contracts, however, lead to mismatched\nexpectations and failures, creating a pressing need for robust conformance\ntesting. Current test generation techniques are hindered by key challenges:\npolyglot systems, source code inaccessibility, a cost-reliability trade-off,\nand, most critically, the difficulty of generating structured inputs.\n  We introduce BOSQTGEN, a novel black-box methodology and tool for API test\ngeneration. BOSQTGEN utilizes a novel approach for decomposing API\nspecifications into primitives, using LLMs to suggest coherent strata for them,\nand employing combinatorial testing to efficiently sample over these values.\nThis approach ensures coverage of critical interactions while avoiding the\nredundancy of random sampling.\n  The resulting BOSQTGEN system achieves an average of 82% code coverage on\nRESTful benchmarks, often a 20% or more increase over prior state-of-the-art\nsystems and nearing parity with hand-written test suites. Providing a fully\nAPI-driven approach to test generation, enables developers to automatically\ncreate high-quality test cases for validation or test-driven development.",
      "url": "http://arxiv.org/abs/2510.19777v1",
      "published_time_eastern_timestamp": 1761153090.0
    },
    {
      "title": "Beyond Reactivity: Measuring Proactive Problem Solving in LLM Agents",
      "summary": "LLM-based agents are increasingly moving towards proactivity: rather than\nawaiting instruction, they exercise agency to anticipate user needs and solve\nthem autonomously. However, evaluating proactivity is challenging; current\nbenchmarks are constrained to localized context, limiting their ability to test\nreasoning across sources and longer time horizons. To address this gap, we\npresent PROBE (Proactive Resolution Of BottlEnecks). PROBE decomposes\nproactivity as a pipeline of three core capabilities: (1) searching for\nunspecified issues, (2) identifying specific bottlenecks, and (3) executing\nappropriate resolutions. We apply PROBE to evaluate leading LLMs and popular\nagentic frameworks, showing that even state-of-the-art models struggle to solve\nthis benchmark. Computing our consistent measurements across frontier LLMs and\nagents, we find that the best end-to-end performance of 40% is achieved by both\nGPT-5 and Claude Opus-4.1. Additionally, we demonstrate the relative\ncapabilities of each model and analyze mutual failure modes. Our results\nhighlight the current limitations of autonomous action in agentic systems, and\nexpose promising future research directions.",
      "url": "http://arxiv.org/abs/2510.19771v1",
      "published_time_eastern_timestamp": 1761152445.0
    },
    {
      "title": "SmartSwitch: Advancing LLM Reasoning by Overcoming Underthinking via\n  Promoting Deeper Thought Exploration",
      "summary": "The long chain-of-thought (LongCoT) capability is central to the recent\nbreakthroughs achieved by large language models in complex reasoning tasks.\nHowever, the accompanying issue of ''underthinking'', where models exhibit\nshallow reasoning by frequently switching thoughts without sufficient\nexploration, limits both performance and token efficiency. To address this\nproblem, we propose a simple yet effective reasoning strategy: the SmartSwitch\ninference framework. This framework can be easily integrated into any large\nlanguage model as a plug-and-play solution, continuously monitoring the model's\nreasoning process to detect underthinking and guide it toward deeper\nexploration of promising but overlooked thoughts. Specifically, the perception\nmodule identifies points where thoughts switch and evaluates the potential of\nthe preceding thought using an off-the-shelf process reward model (PRM). If a\nhigh-potential thought is found to be prematurely abandoned, the intervention\nmodule interrupts the ongoing inference, backtracks to the point before the\nswitch, and inserts a \"deepening prompt\" to encourage further exploration along\nthat promising path. Extensive experiments on challenging mathematical\nreasoning benchmarks demonstrate that our method significantly enhances the\nperformance of various large language models of different sizes.",
      "url": "http://arxiv.org/abs/2510.19767v1",
      "published_time_eastern_timestamp": 1761152161.0
    },
    {
      "title": "Review of Tools for Zero-Code LLM Based Application Development",
      "summary": "Large Language Models (LLMs) are transforming software creation by enabling\nzero code development platforms. Our survey reviews recent platforms that let\nusers build applications without writing code, by leveraging LLMs as the brains\nof the development process. We adopt a broad survey methodology, categorizing\nplatforms based on key dimensions such as interface style, backend integration,\noutput type, and extensibility. We analyze both dedicated LLM based app\nbuilders (OpenAI's custom GPTs, Bolt.new, Dust.tt, Flowise, Cognosys) and\ngeneral no code platforms (e.g., Bubble, Glide) that integrate LLM\ncapabilities. We present a taxonomy categorizing these platforms by their\ninterface (conversational, visual, etc.), supported LLM backends, output type\n(chatbot, full application, workflow), and degree of extensibility. Core\nfeatures such as autonomous agents, memory management, workflow orchestration,\nand API integrations are in scope of the survey. We provide a detailed\ncomparison, highlighting each platform's strengths and limitations. Trade offs\n(customizability, scalability, vendor lock-in) are discussed in comparison with\ntraditional and low code development approaches. Finally, we outline future\ndirections, including multimodal interfaces, on device LLMs, and improved\norchestration for democratizing app creation with AI. Our findings indicate\nthat while zero code LLM platforms greatly reduce the barrier to creating AI\npowered applications, they still face challenges in flexibility and\nreliability. Overall, the landscape is rapidly evolving, offering exciting\nopportunities to empower non programmers to create sophisticated software.",
      "url": "http://arxiv.org/abs/2510.19747v1",
      "published_time_eastern_timestamp": 1761151276.0
    },
    {
      "title": "Zhyper: Factorized Hypernetworks for Conditioned LLM Fine-Tuning",
      "summary": "Large Language Model (LLM) conditioning refers to instructing an LLM to\ngenerate content in accordance with the norms and values of a specific culture,\nbeliefs of a particular political orientation, or any desired text-specified\nsemantic conditioning. Unfortunately, prompt engineering does not ensure that\nLLMs behave in accordance with a desired conditioning due to the inductive bias\nof the pre-training and alignment datasets. Prior works have focused on\nfine-tuning LLMs by directly conditioning the LoRA weights; however, such\nmethods introduce a large number of parameters. As a remedy, we propose Zhyper,\na parameter-efficient factorized hypernetwork framework that generates\ncontext-aware LoRA adapters from textual descriptions. Experiments on multiple\nbenchmarks show that Zhyper achieves competitive performance with up to 26x\nfewer parameters than the state-of-the-art baselines. Furthermore, we extend\nZhyper to cultural alignment, demonstrating improved generalization to\nout-of-domain settings and a better capturing of fine-grained contextual\nvalues.",
      "url": "http://arxiv.org/abs/2510.19733v2",
      "published_time_eastern_timestamp": 1761150343.0
    },
    {
      "title": "RLIE: Rule Generation with Logistic Regression, Iterative Refinement,\n  and Evaluation for Large Language Models",
      "summary": "Large Language Models (LLMs) can propose rules in natural language,\nsidestepping the need for a predefined predicate space in traditional rule\nlearning. Yet many LLM-based approaches ignore interactions among rules, and\nthe opportunity to couple LLMs with probabilistic rule learning for robust\ninference remains underexplored. We present RLIE, a unified framework that\nintegrates LLMs with probabilistic modeling to learn a set of weighted rules.\nRLIE has four stages: (1) Rule generation, where an LLM proposes and filters\ncandidates; (2) Logistic regression, which learns probabilistic weights for\nglobal selection and calibration; (3) Iterative refinement, which updates the\nrule set using prediction errors; and (4) Evaluation, which compares the\nweighted rule set as a direct classifier with methods that inject rules into an\nLLM. We evaluate multiple inference strategies on real-world datasets. Applying\nrules directly with their learned weights yields superior performance, whereas\nprompting LLMs with the rules, weights, and logistic-model outputs surprisingly\ndegrades accuracy. This supports the view that LLMs excel at semantic\ngeneration and interpretation but are less reliable for precise probabilistic\nintegration. RLIE clarifies the potential and limitations of LLMs for inductive\nreasoning and couples them with classic probabilistic rule combination methods\nto enable more reliable neuro-symbolic reasoning.",
      "url": "http://arxiv.org/abs/2510.19698v1",
      "published_time_eastern_timestamp": 1761148204.0
    },
    {
      "title": "Are Large Language Models Sensitive to the Motives Behind Communication?",
      "summary": "Human communication is motivated: people speak, write, and create content\nwith a particular communicative intent in mind. As a result, information that\nlarge language models (LLMs) and AI agents process is inherently framed by\nhumans' intentions and incentives. People are adept at navigating such nuanced\ninformation: we routinely identify benevolent or self-serving motives in order\nto decide what statements to trust. For LLMs to be effective in the real world,\nthey too must critically evaluate content by factoring in the motivations of\nthe source -- for instance, weighing the credibility of claims made in a sales\npitch. In this paper, we undertake a comprehensive study of whether LLMs have\nthis capacity for motivational vigilance. We first employ controlled\nexperiments from cognitive science to verify that LLMs' behavior is consistent\nwith rational models of learning from motivated testimony, and find they\nsuccessfully discount information from biased sources in a human-like manner.\nWe then extend our evaluation to sponsored online adverts, a more naturalistic\nreflection of LLM agents' information ecosystems. In these settings, we find\nthat LLMs' inferences do not track the rational models' predictions nearly as\nclosely -- partly due to additional information that distracts them from\nvigilance-relevant considerations. However, a simple steering intervention that\nboosts the salience of intentions and incentives substantially increases the\ncorrespondence between LLMs and the rational model. These results suggest that\nLLMs possess a basic sensitivity to the motivations of others, but generalizing\nto novel real-world settings will require further improvements to these models.",
      "url": "http://arxiv.org/abs/2510.19687v1",
      "published_time_eastern_timestamp": 1761147300.0
    },
    {
      "title": "CircuitGuard: Mitigating LLM Memorization in RTL Code Generation Against\n  IP Leakage",
      "summary": "Large Language Models (LLMs) have achieved remarkable success in generative\ntasks, including register-transfer level (RTL) hardware synthesis. However,\ntheir tendency to memorize training data poses critical risks when proprietary\nor security-sensitive designs are unintentionally exposed during inference.\nWhile prior work has examined memorization in natural language, RTL introduces\nunique challenges: In RTL, structurally different implementations (e.g.,\nbehavioral vs. gate-level descriptions) can realize the same hardware, leading\nto intellectual property (IP) leakage (full or partial) even without verbatim\noverlap. Conversely, even small syntactic variations (e.g., operator precedence\nor blocking vs. non-blocking assignments) can drastically alter circuit\nbehavior, making correctness preservation especially challenging. In this work,\nwe systematically study memorization in RTL code generation and propose\nCircuitGuard, a defense strategy that balances leakage reduction with\ncorrectness preservation. CircuitGuard (1) introduces a novel RTL-aware\nsimilarity metric that captures both structural and functional equivalence\nbeyond surface-level overlap, and (2) develops an activation-level steering\nmethod that identifies and attenuates transformer components most responsible\nfor memorization. Our empirical evaluation demonstrates that CircuitGuard\nidentifies (and isolates) 275 memorization-critical features across layers\n18-28 of Llama 3.1-8B model, achieving up to 80% reduction in semantic\nsimilarity to proprietary patterns while maintaining generation quality.\nCircuitGuard further shows 78-85% cross-domain transfer effectiveness, enabling\nrobust memorization mitigation across circuit categories without retraining.",
      "url": "http://arxiv.org/abs/2510.19676v1",
      "published_time_eastern_timestamp": 1761146535.0
    },
    {
      "title": "CoSense-LLM: Semantics at the Edge with Cost- and Uncertainty-Aware\n  Cloud-Edge Cooperation",
      "summary": "We present CoSense-LLM, an edge-first framework that turns continuous\nmultimodal sensor streams (for example Wi-Fi CSI, IMU, audio, RFID, and\nlightweight vision) into compact, verifiable semantic tokens and coordinates\nwith large language models under explicit latency, energy, bandwidth, and\nprivacy constraints. CoSense-LLM has four parts: (i) SenseFusion, a lightweight\nencoder that aligns sensor embeddings with language and compresses them into\nshort discrete code sequences; (ii) Edge-RAG, a local hybrid retrieval layer\nthat grounds generation in site specific policies and notes; (iii)\nPromptRouter, a cost and uncertainty aware policy that selects edge only\ngeneration, edge plus retrieval, or compact cloud escalation; and (iv) Secure\nExecution, an auditable redaction path that enforces data minimization so raw\nwaveforms never leave the device. The system works with modern serving\noptimizations, including paged or streaming KV caches, FlashAttention style\nkernels, speculative decoding, and quantized LoRA adapters, and supports on\ndevice personalization and federated updates under non IID drift. Across home,\noffice, and clinic deployments, CoSense-LLM delivers grounded explanations\nwhile meeting tight service level objectives: it sustains sub second (p95) end\nto end latency on edge dominant paths, reduces inter tier token and bandwidth\ncosts by preferring local retrieval grounded responses, and preserves privacy\nby transmitting only discrete codes and redacted metadata. Ablations show that\nEdge-RAG improves factual consistency and reduces contradictions, calibrated\nuncertainty enables selective abstention and controlled escalations, and KV\nplus decoding accelerators lower energy per decision. The results support an\nedge first design that treats semantics, privacy, and predictable latency as co\nequal goals for large model deployments in interference prone environments.",
      "url": "http://arxiv.org/abs/2510.19670v1",
      "published_time_eastern_timestamp": 1761146216.0
    },
    {
      "title": "DiffAdapt: Difficulty-Adaptive Reasoning for Token-Efficient LLM\n  Inference",
      "summary": "Recent reasoning Large Language Models (LLMs) demonstrate remarkable\nproblem-solving abilities but often generate long thinking traces whose utility\nis unclear. Our work aims to improve their efficiency, enabling them to reach\nhigh performance without overthinking. First, we analyze the entropy of token\nprobabilities in reasoning traces. Across three models, we observe a consistent\nU-shaped entropy pattern: high entropy on easy problems despite high accuracy,\nlow entropy on problems with medium difficulty, and high entropy on hard\nproblems reflecting uncertainty. Specifically, we notice 22--25\\% entropy\nreduction from easy to medium difficulty regions, suggesting an {overthinking}\nphenomenon on easy instances. Building on these insights, we introduce\n\\textbf{DiffAdapt}, a lightweight framework that selects Easy/Normal/Hard\ninference strategies per question based on their difficulty and reasoning trace\nentropy. Each inference strategy consists of a fixed prompt, temperature and\nmaximum token length. In contrast to existing efficiency optimization methods,\nour approach does not fine-tune base LLM but a small probe that classifies\nLLM's final hidden state, allowing inexpensive adaptation. We comprehensively\nevaluate our method on five models and eight benchmarks. Our method achieves\ncomparable or improved accuracy while reducing token usage by up to 22.4\\%,\nestablishing a practical path toward compute-efficient reasoning.",
      "url": "http://arxiv.org/abs/2510.19669v1",
      "published_time_eastern_timestamp": 1761146166.0
    },
    {
      "title": "Unraveling Emotions with Pre-Trained Models",
      "summary": "Transformer models have significantly advanced the field of emotion\nrecognition. However, there are still open challenges when exploring open-ended\nqueries for Large Language Models (LLMs). Although current models offer good\nresults, automatic emotion analysis in open texts presents significant\nchallenges, such as contextual ambiguity, linguistic variability, and\ndifficulty interpreting complex emotional expressions. These limitations make\nthe direct application of generalist models difficult. Accordingly, this work\ncompares the effectiveness of fine-tuning and prompt engineering in emotion\ndetection in three distinct scenarios: (i) performance of fine-tuned\npre-trained models and general-purpose LLMs using simple prompts; (ii)\neffectiveness of different emotion prompt designs with LLMs; and (iii) impact\nof emotion grouping techniques on these models. Experimental tests attain\nmetrics above 70% with a fine-tuned pre-trained model for emotion recognition.\nMoreover, the findings highlight that LLMs require structured prompt\nengineering and emotion grouping to enhance their performance. These\nadvancements improve sentiment analysis, human-computer interaction, and\nunderstanding of user behavior across various domains.",
      "url": "http://arxiv.org/abs/2510.19668v1",
      "published_time_eastern_timestamp": 1761146032.0
    },
    {
      "title": "AgentSense: LLMs Empower Generalizable and Explainable Web-Based\n  Participatory Urban Sensing",
      "summary": "Web-based participatory urban sensing has emerged as a vital approach for\nmodern urban management by leveraging mobile individuals as distributed\nsensors. However, existing urban sensing systems struggle with limited\ngeneralization across diverse urban scenarios and poor interpretability in\ndecision-making. In this work, we introduce AgentSense, a hybrid, training-free\nframework that integrates large language models (LLMs) into participatory urban\nsensing through a multi-agent evolution system. AgentSense initially employs\nclassical planner to generate baseline solutions and then iteratively refines\nthem to adapt sensing task assignments to dynamic urban conditions and\nheterogeneous worker preferences, while producing natural language explanations\nthat enhance transparency and trust. Extensive experiments across two\nlarge-scale mobility datasets and seven types of dynamic disturbances\ndemonstrate that AgentSense offers distinct advantages in adaptivity and\nexplainability over traditional methods. Furthermore, compared to single-agent\nLLM baselines, our approach outperforms in both performance and robustness,\nwhile delivering more reasonable and transparent explanations. These results\nposition AgentSense as a significant advancement towards deploying adaptive and\nexplainable urban sensing systems on the web.",
      "url": "http://arxiv.org/abs/2510.19661v1",
      "published_time_eastern_timestamp": 1761145586.0
    },
    {
      "title": "LLavaCode: Compressed Code Representations for Retrieval-Augmented Code\n  Generation",
      "summary": "Retrieval-augmented generation has emerged as one of the most effective\napproaches for code completion, particularly when context from a surrounding\nrepository is essential. However, incorporating context significantly extends\nsequence length, leading to slower inference - a critical limitation for\ninteractive settings such as IDEs. In this work, we introduce LlavaCode, a\nframework that compresses code into compact, semantically rich representations\ninterpretable by code LLM, enhancing generation quality while reducing the\nretrieved context to only a few compressed single-token vectors. Using a small\nprojector module we can significantly increase the EM and ES metrics of coding\nmodel with negligible latency increase. Our experiments demonstrate that\ncompressed context enables 20-38% reduction in Time-to-First-Token (TTFT) on\nline completion tasks compared to full-RAG pipelines.",
      "url": "http://arxiv.org/abs/2510.19644v1",
      "published_time_eastern_timestamp": 1761144561.0
    }
  ]
}