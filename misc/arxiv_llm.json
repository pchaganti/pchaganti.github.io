{
  "last_updated": "2025-06-13T17:10:46.783589-04:00",
  "papers": [
    {
      "title": "AutoMind: Adaptive Knowledgeable Agent for Automated Data Science",
      "summary": "Large Language Model (LLM) agents have shown great potential in addressing\nreal-world data science problems. LLM-driven data science agents promise to\nautomate the entire machine learning pipeline, yet their real-world\neffectiveness remains limited. Existing frameworks depend on rigid, pre-defined\nworkflows and inflexible coding strategies; consequently, they excel only on\nrelatively simple, classical problems and fail to capture the empirical\nexpertise that human practitioners bring to complex, innovative tasks. In this\nwork, we introduce AutoMind, an adaptive, knowledgeable LLM-agent framework\nthat overcomes these deficiencies through three key advances: (1) a curated\nexpert knowledge base that grounds the agent in domain expert knowledge, (2) an\nagentic knowledgeable tree search algorithm that strategically explores\npossible solutions, and (3) a self-adaptive coding strategy that dynamically\ntailors code generation to task complexity. Evaluations on two automated data\nscience benchmarks demonstrate that AutoMind delivers superior performance\nversus state-of-the-art baselines. Additional analyses confirm favorable\neffectiveness, efficiency, and qualitative solution quality, highlighting\nAutoMind as an efficient and robust step toward fully automated data science.",
      "url": "http://arxiv.org/abs/2506.10974v1",
      "published_time_eastern_timestamp": 1749751172.0
    },
    {
      "title": "Farseer: A Refined Scaling Law in Large Language Models",
      "summary": "Training Large Language Models (LLMs) is prohibitively expensive, creating a\ncritical scaling gap where insights from small-scale experiments often fail to\ntransfer to resource-intensive production systems, thereby hindering efficient\ninnovation. To bridge this, we introduce Farseer, a novel and refined scaling\nlaw offering enhanced predictive accuracy across scales. By systematically\nconstructing a model loss surface $L(N,D)$, Farseer achieves a significantly\nbetter fit to empirical data than prior laws (e.g., Chinchilla's law). Our\nmethodology yields accurate, robust, and highly generalizable predictions,\ndemonstrating excellent extrapolation capabilities, improving upon Chinchilla's\nlaw by reducing extrapolation error by 433\\%. This allows for the reliable\nevaluation of competing training strategies across all $(N,D)$ settings,\nenabling conclusions from small-scale ablation studies to be confidently\nextrapolated to predict large-scale performance. Furthermore, Farseer provides\nnew insights into optimal compute allocation, better reflecting the nuanced\ndemands of modern LLM training. To validate our approach, we trained an\nextensive suite of approximately 1,000 LLMs across diverse scales and\nconfigurations, consuming roughly 3 million NVIDIA H100 GPU hours. We are\ncomprehensively open-sourcing all models, data, results, and logs at\nhttps://github.com/Farseer-Scaling-Law/Farseer to foster further research.",
      "url": "http://arxiv.org/abs/2506.10972v1",
      "published_time_eastern_timestamp": 1749751163.0
    },
    {
      "title": "GENMANIP: LLM-driven Simulation for Generalizable Instruction-Following\n  Manipulation",
      "summary": "Robotic manipulation in real-world settings remains challenging, especially\nregarding robust generalization. Existing simulation platforms lack sufficient\nsupport for exploring how policies adapt to varied instructions and scenarios.\nThus, they lag behind the growing interest in instruction-following foundation\nmodels like LLMs, whose adaptability is crucial yet remains underexplored in\nfair comparisons. To bridge this gap, we introduce GenManip, a realistic\ntabletop simulation platform tailored for policy generalization studies. It\nfeatures an automatic pipeline via LLM-driven task-oriented scene graph to\nsynthesize large-scale, diverse tasks using 10K annotated 3D object assets. To\nsystematically assess generalization, we present GenManip-Bench, a benchmark of\n200 scenarios refined via human-in-the-loop corrections. We evaluate two policy\ntypes: (1) modular manipulation systems integrating foundation models for\nperception, reasoning, and planning, and (2) end-to-end policies trained\nthrough scalable data collection. Results show that while data scaling benefits\nend-to-end methods, modular systems enhanced with foundation models generalize\nmore effectively across diverse scenarios. We anticipate this platform to\nfacilitate critical insights for advancing policy generalization in realistic\nconditions. Project Page: https://genmanip.axi404.top/.",
      "url": "http://arxiv.org/abs/2506.10966v1",
      "published_time_eastern_timestamp": 1749751144.0
    },
    {
      "title": "MMMG: A Massive, Multidisciplinary, Multi-Tier Generation Benchmark for\n  Text-to-Image Reasoning",
      "summary": "In this paper, we introduce knowledge image generation as a new task,\nalongside the Massive Multi-Discipline Multi-Tier Knowledge-Image Generation\nBenchmark (MMMG) to probe the reasoning capability of image generation models.\nKnowledge images have been central to human civilization and to the mechanisms\nof human learning--a fact underscored by dual-coding theory and the\npicture-superiority effect. Generating such images is challenging, demanding\nmultimodal reasoning that fuses world knowledge with pixel-level grounding into\nclear explanatory visuals. To enable comprehensive evaluation, MMMG offers\n4,456 expert-validated (knowledge) image-prompt pairs spanning 10 disciplines,\n6 educational levels, and diverse knowledge formats such as charts, diagrams,\nand mind maps. To eliminate confounding complexity during evaluation, we adopt\na unified Knowledge Graph (KG) representation. Each KG explicitly delineates a\ntarget image's core entities and their dependencies. We further introduce\nMMMG-Score to evaluate generated knowledge images. This metric combines factual\nfidelity, measured by graph-edit distance between KGs, with visual clarity\nassessment. Comprehensive evaluations of 16 state-of-the-art text-to-image\ngeneration models expose serious reasoning deficits--low entity fidelity, weak\nrelations, and clutter--with GPT-4o achieving an MMMG-Score of only 50.20,\nunderscoring the benchmark's difficulty. To spur further progress, we release\nFLUX-Reason (MMMG-Score of 34.45), an effective and open baseline that combines\na reasoning LLM with diffusion models and is trained on 16,000 curated\nknowledge image-prompt pairs.",
      "url": "http://arxiv.org/abs/2506.10963v1",
      "published_time_eastern_timestamp": 1749751089.0
    },
    {
      "title": "ChineseHarm-Bench: A Chinese Harmful Content Detection Benchmark",
      "summary": "Large language models (LLMs) have been increasingly applied to automated\nharmful content detection tasks, assisting moderators in identifying policy\nviolations and improving the overall efficiency and accuracy of content review.\nHowever, existing resources for harmful content detection are predominantly\nfocused on English, with Chinese datasets remaining scarce and often limited in\nscope. We present a comprehensive, professionally annotated benchmark for\nChinese content harm detection, which covers six representative categories and\nis constructed entirely from real-world data. Our annotation process further\nyields a knowledge rule base that provides explicit expert knowledge to assist\nLLMs in Chinese harmful content detection. In addition, we propose a\nknowledge-augmented baseline that integrates both human-annotated knowledge\nrules and implicit knowledge from large language models, enabling smaller\nmodels to achieve performance comparable to state-of-the-art LLMs. Code and\ndata are available at https://github.com/zjunlp/ChineseHarm-bench.",
      "url": "http://arxiv.org/abs/2506.10960v1",
      "published_time_eastern_timestamp": 1749751025.0
    },
    {
      "title": "SWE-Factory: Your Automated Factory for Issue Resolution Training Data\n  and Evaluation Benchmarks",
      "summary": "Constructing large-scale datasets for the GitHub issue resolution task is\ncrucial for both training and evaluating the software engineering capabilities\nof Large Language Models (LLMs). However, the traditional process for creating\nsuch benchmarks is notoriously challenging and labor-intensive, particularly in\nthe stages of setting up evaluation environments, grading test outcomes, and\nvalidating task instances. In this paper, we propose SWE-Factory, an automated\npipeline designed to address these challenges. To tackle these issues, our\npipeline integrates three core automated components. First, we introduce\nSWE-Builder, a multi-agent system that automates evaluation environment\nconstruction, which employs four specialized agents that work in a\ncollaborative, iterative loop and leverages an environment memory pool to\nenhance efficiency. Second, we introduce a standardized, exit-code-based\ngrading method that eliminates the need for manually writing custom parsers.\nFinally, we automate the fail2pass validation process using these reliable exit\ncode signals. Experiments on 671 issues across four programming languages show\nthat our pipeline can effectively construct valid task instances; for example,\nwith GPT-4.1-mini, our SWE-Builder constructs 269 valid instances at $0.045 per\ninstance, while with Gemini-2.5-flash, it achieves comparable performance at\nthe lowest cost of $0.024 per instance. We also demonstrate that our\nexit-code-based grading achieves 100% accuracy compared to manual inspection,\nand our automated fail2pass validation reaches a precision of 0.92 and a recall\nof 1.00. We hope our automated pipeline will accelerate the collection of\nlarge-scale, high-quality GitHub issue resolution datasets for both training\nand evaluation. Our code and datasets are released at\nhttps://github.com/DeepSoftwareAnalytics/swe-factory.",
      "url": "http://arxiv.org/abs/2506.10954v1",
      "published_time_eastern_timestamp": 1749750857.0
    },
    {
      "title": "Build the web for agents, not agents for the web",
      "summary": "Recent advancements in Large Language Models (LLMs) and multimodal\ncounterparts have spurred significant interest in developing web agents -- AI\nsystems capable of autonomously navigating and completing tasks within web\nenvironments. While holding tremendous promise for automating complex web\ninteractions, current approaches face substantial challenges due to the\nfundamental mismatch between human-designed interfaces and LLM capabilities.\nCurrent methods struggle with the inherent complexity of web inputs, whether\nprocessing massive DOM trees, relying on screenshots augmented with additional\ninformation, or bypassing the user interface entirely through API interactions.\nThis position paper advocates for a paradigm shift in web agent research:\nrather than forcing web agents to adapt to interfaces designed for humans, we\nshould develop a new interaction paradigm specifically optimized for agentic\ncapabilities. To this end, we introduce the concept of an Agentic Web Interface\n(AWI), an interface specifically designed for agents to navigate a website. We\nestablish six guiding principles for AWI design, emphasizing safety,\nefficiency, and standardization, to account for the interests of all primary\nstakeholders. This reframing aims to overcome fundamental limitations of\nexisting interfaces, paving the way for more efficient, reliable, and\ntransparent web agent design, which will be a collaborative effort involving\nthe broader ML community.",
      "url": "http://arxiv.org/abs/2506.10953v1",
      "published_time_eastern_timestamp": 1749750838.0
    },
    {
      "title": "Monitoring Decomposition Attacks in LLMs with Lightweight Sequential\n  Monitors",
      "summary": "Current LLM safety defenses fail under decomposition attacks, where a\nmalicious goal is decomposed into benign subtasks that circumvent refusals. The\nchallenge lies in the existing shallow safety alignment techniques: they only\ndetect harm in the immediate prompt and do not reason about long-range intent,\nleaving them blind to malicious intent that emerges over a sequence of\nseemingly benign instructions. We therefore propose adding an external monitor\nthat observes the conversation at a higher granularity. To facilitate our study\nof monitoring decomposition attacks, we curate the largest and most diverse\ndataset to date, including question-answering, text-to-image, and agentic\ntasks. We verify our datasets by testing them on frontier LLMs and show an 87%\nattack success rate on average on GPT-4o. This confirms that decomposition\nattack is broadly effective. Additionally, we find that random tasks can be\ninjected into the decomposed subtasks to further obfuscate malicious intents.\nTo defend in real time, we propose a lightweight sequential monitoring\nframework that cumulatively evaluates each subtask. We show that a carefully\nprompt engineered lightweight monitor achieves a 93% defense success rate,\nbeating reasoning models like o3 mini as a monitor. Moreover, it remains robust\nagainst random task injection and cuts cost by 90% and latency by 50%. Our\nfindings suggest that lightweight sequential monitors are highly effective in\nmitigating decomposition attacks and are viable in deployment.",
      "url": "http://arxiv.org/abs/2506.10949v1",
      "published_time_eastern_timestamp": 1749750658.0
    },
    {
      "title": "Execution Guided Line-by-Line Code Generation",
      "summary": "We present a novel approach to neural code generation that incorporates\nreal-time execution signals into the language model generation process. While\nlarge language models (LLMs) have demonstrated impressive code generation\ncapabilities, they typically do not utilize execution feedback during\ninference, a critical signal that human programmers regularly leverage. Our\nmethod, Execution-Guided Classifier-Free Guidance (EG-CFG), dynamically\nincorporates execution signals as the model generates code, providing\nline-by-line feedback that guides the generation process toward executable\nsolutions. EG-CFG employs a multi-stage process: first, we conduct beam search\nto sample candidate program completions for each line; second, we extract\nexecution signals by executing these candidates against test cases; and\nfinally, we incorporate these signals into the prompt during generation. By\nmaintaining consistent signals across tokens within the same line and\nrefreshing signals at line boundaries, our approach provides coherent guidance\nwhile preserving syntactic structure. Moreover, the method naturally supports\nnative parallelism at the task level in which multiple agents operate in\nparallel, exploring diverse reasoning paths and collectively generating a broad\nset of candidate solutions. Our experiments across diverse coding tasks\ndemonstrate that EG-CFG significantly improves code generation performance\ncompared to standard approaches, achieving state-of-the-art results across\nvarious levels of complexity, from foundational problems to challenging\ncompetitive programming tasks. Our code is available at:\nhttps://github.com/boazlavon/eg_cfg",
      "url": "http://arxiv.org/abs/2506.10948v1",
      "published_time_eastern_timestamp": 1749750605.0
    },
    {
      "title": "GUARD: Guided Unlearning and Retention via Data Attribution for Large\n  Language Models",
      "summary": "Unlearning in large language models (LLMs) is becoming increasingly important\ndue to regulatory compliance, copyright protection, and privacy concerns.\nHowever, a key challenge in LLM unlearning is unintended forgetting, where the\nremoval of specific data inadvertently impairs the utility of the model and its\nretention of valuable, desired information. While prior work has primarily\nfocused on architectural innovations, the influence of data-level factors on\nunlearning performance remains underexplored. As a result, existing methods\noften suffer from degraded retention when forgetting high-impact data. To\naddress this, we propose GUARD-a novel framework for Guided Unlearning And\nRetention via Data attribution. At its core, GUARD introduces a lightweight\nproxy data attribution metric tailored for LLM unlearning, which quantifies the\n\"alignment\" between the forget and retain sets while remaining computationally\nefficient. Building on this, we design a novel unlearning objective that\nassigns adaptive, nonuniform unlearning weights to samples, inversely\nproportional to their proxy attribution scores. Through such a reallocation of\nunlearning power, GUARD mitigates unintended losses in retention. We provide\nrigorous theoretical guarantees that GUARD significantly enhances retention\nwhile maintaining forgetting metrics comparable to prior methods. Extensive\nexperiments on the TOFU benchmark across multiple LLM architectures demonstrate\nthat GUARD substantially improves utility preservation while ensuring effective\nunlearning. Notably, GUARD reduces utility sacrifice on the Retain Set by up to\n194.92% in terms of Truth Ratio when forgetting 10% of the training data.",
      "url": "http://arxiv.org/abs/2506.10946v1",
      "published_time_eastern_timestamp": 1749750549.0
    },
    {
      "title": "Self-Adapting Language Models",
      "summary": "Large language models (LLMs) are powerful but static; they lack mechanisms to\nadapt their weights in response to new tasks, knowledge, or examples. We\nintroduce Self-Adapting LLMs (SEAL), a framework that enables LLMs to\nself-adapt by generating their own finetuning data and update directives. Given\na new input, the model produces a self-edit-a generation that may restructure\nthe information in different ways, specify optimization hyperparameters, or\ninvoke tools for data augmentation and gradient-based updates. Through\nsupervised finetuning (SFT), these self-edits result in persistent weight\nupdates, enabling lasting adaptation. To train the model to produce effective\nself-edits, we use a reinforcement learning loop with the downstream\nperformance of the updated model as the reward signal. Unlike prior approaches\nthat rely on separate adaptation modules or auxiliary networks, SEAL directly\nuses the model's own generation to control its adaptation process. Experiments\non knowledge incorporation and few-shot generalization show that SEAL is a\npromising step toward language models capable of self-directed adaptation. Our\nwebsite and code is available at https://jyopari.github.io/posts/seal.",
      "url": "http://arxiv.org/abs/2506.10943v1",
      "published_time_eastern_timestamp": 1749750493.0
    },
    {
      "title": "Dynamic Epistemic Friction in Dialogue",
      "summary": "Recent developments in aligning Large Language Models (LLMs) with human\npreferences have significantly enhanced their utility in human-AI collaborative\nscenarios. However, such approaches often neglect the critical role of\n\"epistemic friction,\" or the inherent resistance encountered when updating\nbeliefs in response to new, conflicting, or ambiguous information. In this\npaper, we define dynamic epistemic friction as the resistance to epistemic\nintegration, characterized by the misalignment between an agent's current\nbelief state and new propositions supported by external evidence. We position\nthis within the framework of Dynamic Epistemic Logic (Van Benthem and Pacuit,\n2011), where friction emerges as nontrivial belief-revision during the\ninteraction. We then present analyses from a situated collaborative task that\ndemonstrate how this model of epistemic friction can effectively predict belief\nupdates in dialogues, and we subsequently discuss how the model of belief\nalignment as a measure of epistemic resistance or friction can naturally be\nmade more sophisticated to accommodate the complexities of real-world dialogue\nscenarios.",
      "url": "http://arxiv.org/abs/2506.10934v1",
      "published_time_eastern_timestamp": 1749750060.0
    },
    {
      "title": "The Role of Generative AI in Facilitating Social Interactions: A Scoping\n  Review",
      "summary": "Reduced social connectedness increasingly poses a threat to mental health,\nlife expectancy, and general well-being. Generative AI (GAI) technologies, such\nas large language models (LLMs) and image generation tools, are increasingly\nintegrated into applications aimed at enhancing human social experiences.\nDespite their growing presence, little is known about how these technologies\ninfluence social interactions. This scoping review investigates how GAI-based\napplications are currently designed to facilitate social interaction, what\nforms of social engagement they target, and which design and evaluation\nmethodologies designers use to create and evaluate them. Through an analysis of\n30 studies published since 2020, we identify key trends in application domains\nincluding storytelling, socio-emotional skills training, reminiscence,\ncollaborative learning, music making, and general conversation. We highlight\nthe role of participatory and co-design approaches in fostering both effective\ntechnology use and social engagement, while also examining socio-ethical\nconcerns such as cultural bias and accessibility. This review underscores the\npotential of GAI to support dynamic and personalized interactions, but calls\nfor greater attention to equitable design practices and inclusive evaluation\nstrategies.",
      "url": "http://arxiv.org/abs/2506.10927v1",
      "published_time_eastern_timestamp": 1749749839.0
    },
    {
      "title": "Robustly Improving LLM Fairness in Realistic Settings via\n  Interpretability",
      "summary": "Large language models (LLMs) are increasingly deployed in high-stakes hiring\napplications, making decisions that directly impact people's careers and\nlivelihoods. While prior studies suggest simple anti-bias prompts can eliminate\ndemographic biases in controlled evaluations, we find these mitigations fail\nwhen realistic contextual details are introduced. We address these failures\nthrough internal bias mitigation: by identifying and neutralizing sensitive\nattribute directions within model activations, we achieve robust bias reduction\nacross all tested scenarios. Across leading commercial (GPT-4o, Claude 4\nSonnet, Gemini 2.5 Flash) and open-source models (Gemma-2 27B, Gemma-3,\nMistral-24B), we find that adding realistic context such as company names,\nculture descriptions from public careers pages, and selective hiring\nconstraints (e.g.,``only accept candidates in the top 10\\%\") induces\nsignificant racial and gender biases (up to 12\\% differences in interview\nrates). When these biases emerge, they consistently favor Black over White\ncandidates and female over male candidates across all tested models and\nscenarios. Moreover, models can infer demographics and become biased from\nsubtle cues like college affiliations, with these biases remaining invisible\neven when inspecting the model's chain-of-thought reasoning. To address these\nlimitations, our internal bias mitigation identifies race and gender-correlated\ndirections and applies affine concept editing at inference time. Despite using\ndirections from a simple synthetic dataset, the intervention generalizes\nrobustly, consistently reducing bias to very low levels (typically under 1\\%,\nalways below 2.5\\%) while largely maintaining model performance. Our findings\nsuggest that practitioners deploying LLMs for hiring should adopt more\nrealistic evaluation methodologies and consider internal mitigation strategies\nfor equitable outcomes.",
      "url": "http://arxiv.org/abs/2506.10922v1",
      "published_time_eastern_timestamp": 1749749678.0
    },
    {
      "title": "Decomposing MLP Activations into Interpretable Features via\n  Semi-Nonnegative Matrix Factorization",
      "summary": "A central goal for mechanistic interpretability has been to identify the\nright units of analysis in large language models (LLMs) that causally explain\ntheir outputs. While early work focused on individual neurons, evidence that\nneurons often encode multiple concepts has motivated a shift toward analyzing\ndirections in activation space. A key question is how to find directions that\ncapture interpretable features in an unsupervised manner. Current methods rely\non dictionary learning with sparse autoencoders (SAEs), commonly trained over\nresidual stream activations to learn directions from scratch. However, SAEs\noften struggle in causal evaluations and lack intrinsic interpretability, as\ntheir learning is not explicitly tied to the computations of the model. Here,\nwe tackle these limitations by directly decomposing MLP activations with\nsemi-nonnegative matrix factorization (SNMF), such that the learned features\nare (a) sparse linear combinations of co-activated neurons, and (b) mapped to\ntheir activating inputs, making them directly interpretable. Experiments on\nLlama 3.1, Gemma 2 and GPT-2 show that SNMF derived features outperform SAEs\nand a strong supervised baseline (difference-in-means) on causal steering,\nwhile aligning with human-interpretable concepts. Further analysis reveals that\nspecific neuron combinations are reused across semantically-related features,\nexposing a hierarchical structure in the MLP's activation space. Together,\nthese results position SNMF as a simple and effective tool for identifying\ninterpretable features and dissecting concept representations in LLMs.",
      "url": "http://arxiv.org/abs/2506.10920v1",
      "published_time_eastern_timestamp": 1749749609.0
    },
    {
      "title": "Magistral",
      "summary": "We introduce Magistral, Mistral's first reasoning model and our own scalable\nreinforcement learning (RL) pipeline. Instead of relying on existing\nimplementations and RL traces distilled from prior models, we follow a ground\nup approach, relying solely on our own models and infrastructure. Notably, we\ndemonstrate a stack that enabled us to explore the limits of pure RL training\nof LLMs, present a simple method to force the reasoning language of the model,\nand show that RL on text data alone maintains most of the initial checkpoint's\ncapabilities. We find that RL on text maintains or improves multimodal\nunderstanding, instruction following and function calling. We present Magistral\nMedium, trained for reasoning on top of Mistral Medium 3 with RL alone, and we\nopen-source Magistral Small (Apache 2.0) which further includes cold-start data\nfrom Magistral Medium.",
      "url": "http://arxiv.org/abs/2506.10910v1",
      "published_time_eastern_timestamp": 1749748957.0
    },
    {
      "title": "Beyond Gold Standards: Epistemic Ensemble of LLM Judges for Formal\n  Mathematical Reasoning",
      "summary": "Autoformalization plays a crucial role in formal mathematical reasoning by\nenabling the automatic translation of natural language statements into formal\nlanguages. While recent advances using large language models (LLMs) have shown\npromising results, methods for automatically evaluating autoformalization\nremain underexplored. As one moves to more complex domains (e.g., advanced\nmathematics), human evaluation requires significant time and domain expertise,\nespecially as the complexity of the underlying statements and background\nknowledge increases. LLM-as-a-judge presents a promising approach for\nautomating such evaluation. However, existing methods typically employ\ncoarse-grained and generic evaluation criteria, which limit their effectiveness\nfor advanced formal mathematical reasoning, where quality hinges on nuanced,\nmulti-granular dimensions. In this work, we take a step toward addressing this\ngap by introducing a systematic, automatic method to evaluate autoformalization\ntasks. The proposed method is based on an epistemically and formally grounded\nensemble (EFG) of LLM judges, defined on criteria encompassing logical\npreservation (LP), mathematical consistency (MC), formal validity (FV), and\nformal quality (FQ), resulting in a transparent assessment that accounts for\ndifferent contributing factors. We validate the proposed framework to serve as\na proxy for autoformalization assessment within the domain of formal\nmathematics. Overall, our experiments demonstrate that the EFG ensemble of LLM\njudges is a suitable emerging proxy for evaluation, more strongly correlating\nwith human assessments than a coarse-grained model, especially when assessing\nformal qualities. These findings suggest that LLM-as-judges, especially when\nguided by a well-defined set of atomic properties, could offer a scalable,\ninterpretable, and reliable support for evaluating formal mathematical\nreasoning.",
      "url": "http://arxiv.org/abs/2506.10903v1",
      "published_time_eastern_timestamp": 1749748191.0
    },
    {
      "title": "GenPlanX. Generation of Plans and Execution",
      "summary": "Classical AI Planning techniques generate sequences of actions for complex\ntasks. However, they lack the ability to understand planning tasks when\nprovided using natural language. The advent of Large Language Models (LLMs) has\nintroduced novel capabilities in human-computer interaction. In the context of\nplanning tasks, LLMs have shown to be particularly good in interpreting human\nintents among other uses. This paper introduces GenPlanX that integrates LLMs\nfor natural language-based description of planning tasks, with a classical AI\nplanning engine, alongside an execution and monitoring framework. We\ndemonstrate the efficacy of GenPlanX in assisting users with office-related\ntasks, highlighting its potential to streamline workflows and enhance\nproductivity through seamless human-AI collaboration.",
      "url": "http://arxiv.org/abs/2506.10897v1",
      "published_time_eastern_timestamp": 1749747747.0
    },
    {
      "title": "Generalization or Hallucination? Understanding Out-of-Context Reasoning\n  in Transformers",
      "summary": "Large language models (LLMs) can acquire new knowledge through fine-tuning,\nbut this process exhibits a puzzling duality: models can generalize remarkably\nfrom new facts, yet are also prone to hallucinating incorrect information.\nHowever, the reasons for this phenomenon remain poorly understood. In this\nwork, we argue that both behaviors stem from a single mechanism known as\nout-of-context reasoning (OCR): the ability to deduce implications by\nassociating concepts, even those without a causal link. Our experiments across\nfive prominent LLMs confirm that OCR indeed drives both generalization and\nhallucination, depending on whether the associated concepts are causally\nrelated. To build a rigorous theoretical understanding of this phenomenon, we\nthen formalize OCR as a synthetic factual recall task. We empirically show that\na one-layer single-head attention-only transformer with factorized output and\nvalue matrices can learn to solve this task, while a model with combined\nweights cannot, highlighting the crucial role of matrix factorization. Our\ntheoretical analysis shows that the OCR capability can be attributed to the\nimplicit bias of gradient descent, which favors solutions that minimize the\nnuclear norm of the combined output-value matrix. This mathematical structure\nexplains why the model learns to associate facts and implications with high\nsample efficiency, regardless of whether the correlation is causal or merely\nspurious. Ultimately, our work provides a theoretical foundation for\nunderstanding the OCR phenomenon, offering a new lens for analyzing and\nmitigating undesirable behaviors from knowledge injection.",
      "url": "http://arxiv.org/abs/2506.10887v1",
      "published_time_eastern_timestamp": 1749747045.0
    },
    {
      "title": "Slimming Down LLMs Without Losing Their Minds",
      "summary": "This paper investigates and validates the impact of fine-tuning on large\nlanguage model performance, focusing on parameter-efficient methods (LoRA and\nQLoRA). We evaluate model capabilities across three key domains: (1)\ncommonsense reasoning (HellaSwag), (2) mathematical reasoning (GSM8K), and (3)\nmulti-domain knowledge (MMLU-CS).\n  Our findings demonstrate that: (1) LoRA-based methods effectively improve\ntask-specific performance while maintaining computational efficiency, and (2)\nperformance strongly depends on alignment between fine-tuning dataset and\nbenchmark tasks. The study provides both theoretical insights into\nparameter-efficient mechanisms and practical guidance for developers\nimplementing efficient LLM adaptation with limited resources.",
      "url": "http://arxiv.org/abs/2506.10885v1",
      "published_time_eastern_timestamp": 1749746980.0
    }
  ]
}